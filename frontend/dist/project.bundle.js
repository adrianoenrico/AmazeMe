!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=6)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r,i=(r=n(3))&&r.__esModule?r:{default:r};function o(t){arguments.length>1&&void 0!==arguments[1]&&arguments[1]?console.warn("[@withkoji/vcc] ".concat(t," is deprectated and no longer available.")):console.warn("[@withkoji/vcc] ".concat(t," is deprecated and no longer needs to be called.\nYou can safely remove this call from your project!"))}var s={config:n(5),resolveSecret:i.default,pageLoad:function(){return o("Koji.pageLoad()")},on:function(){return o("Koji.on()")},request:function(){return o("Koji.request()",!0)},pwaPrompt:function(){return o("Koji.pwaPrompt()",!0)}};e.default=s},function(t,e){t.exports=function(t,e,n){if(t&&"number"!=typeof t){if(t.hasOwnProperty(e))return t[e];if(-1!==e.indexOf(".")){for(var r=e.split("."),i=t,o=n,s=0;s<r.length;s++){if(!i.hasOwnProperty(r[s])){o=n;break}o=i[r[s]],i=i[r[s]]}return o}return n}return n}},function(t,e,n){t.exports=function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=1)}([function(t,e,n){"use strict";function r(t){var e=o.default.reject(t,(function(t){return t.set})),n=o.default.chain(t).map("set").uniq().compact().value(),r=o.default.range(1,t.length+1),i=o.default.chain(r).difference(n).shuffle().value();e.forEach((function(t,e){return t.set=i[e]}))}function i(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.5;o.default.initial(t).forEach((function(n,r){var i=t[r+1],s=n.set!==i.set,a=Math.random()<=e;s&&a&&(function(t,e,n){o.default.filter(t,{set:e}).forEach((function(t){t.set=n}))}(t,i.set,n.set),n.right=!1,i.left=!1)}))}Object.defineProperty(e,"__esModule",{value:!0});var o=function(t){return t&&t.__esModule?t:{default:t}}(n(2));e.default=function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:8,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],s=[],a=o.default.range(t),u=0;u<e;u+=1)!function(r){var i=a.map((function(i){return{x:i,y:r,top:n||r>0,left:n||i>0,bottom:n||r<e-1,right:n||i<t-1}}));s.push(i)}(u);o.default.initial(s).forEach((function(t,e){r(t),i(t),function(t,e){var n=o.default.chain(t).groupBy("set").values().value(),r=Math.ceil,i=Math.random;n.forEach((function(t){o.default.sampleSize(t,r(i()*t.length)).forEach((function(t){if(t){var n=e[t.x];t.bottom=!1,n.top=!1,n.set=t.set}}))}))}(t,s[e+1])}));var c=o.default.last(s);return r(c),i(c,1),s}},function(t,e,n){"use strict";t.exports=n(0).default},function(t,e,n){(function(t,r){var i;(function(){function o(t,e){return t.set(e[0],e[1]),t}function s(t,e){return t.add(e),t}function a(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}function u(t,e,n,r){for(var i=-1,o=t?t.length:0;++i<o;){var s=t[i];e(r,s,n(s),t)}return r}function c(t,e){for(var n=-1,r=t?t.length:0;++n<r&&!1!==e(t[n],n,t););return t}function h(t,e){for(var n=t?t.length:0;n--&&!1!==e(t[n],n,t););return t}function f(t,e){for(var n=-1,r=t?t.length:0;++n<r;)if(!e(t[n],n,t))return!1;return!0}function l(t,e){for(var n=-1,r=t?t.length:0,i=0,o=[];++n<r;){var s=t[n];e(s,n,t)&&(o[i++]=s)}return o}function p(t,e){return!(!t||!t.length)&&x(t,e,0)>-1}function d(t,e,n){for(var r=-1,i=t?t.length:0;++r<i;)if(n(e,t[r]))return!0;return!1}function g(t,e){for(var n=-1,r=t?t.length:0,i=Array(r);++n<r;)i[n]=e(t[n],n,t);return i}function v(t,e){for(var n=-1,r=e.length,i=t.length;++n<r;)t[i+n]=e[n];return t}function y(t,e,n,r){var i=-1,o=t?t.length:0;for(r&&o&&(n=t[++i]);++i<o;)n=e(n,t[i],i,t);return n}function m(t,e,n,r){var i=t?t.length:0;for(r&&i&&(n=t[--i]);i--;)n=e(n,t[i],i,t);return n}function _(t,e){for(var n=-1,r=t?t.length:0;++n<r;)if(e(t[n],n,t))return!0;return!1}function b(t,e,n){var r;return n(t,(function(t,n,i){if(e(t,n,i))return r=n,!1})),r}function w(t,e,n,r){for(var i=t.length,o=n+(r?1:-1);r?o--:++o<i;)if(e(t[o],o,t))return o;return-1}function x(t,e,n){if(e!=e)return W(t,n);for(var r=n-1,i=t.length;++r<i;)if(t[r]===e)return r;return-1}function j(t,e,n,r){for(var i=n-1,o=t.length;++i<o;)if(r(t[i],e))return i;return-1}function S(t,e){var n=t?t.length:0;return n?O(t,e)/n:bt}function E(t,e,n,r,i){return i(t,(function(t,i,o){n=r?(r=!1,t):e(n,t,i,o)})),n}function O(t,e){for(var n,r=-1,i=t.length;++r<i;){var o=e(t[r]);o!==Y&&(n=n===Y?o:n+o)}return n}function k(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r}function P(t){return function(e){return t(e)}}function D(t,e){return g(e,(function(e){return t[e]}))}function T(t,e){return t.has(e)}function I(t,e){for(var n=-1,r=t.length;++n<r&&x(e,t[n],0)>-1;);return n}function A(t,e){for(var n=t.length;n--&&x(e,t[n],0)>-1;);return n}function R(t){return t&&t.Object===Object?t:null}function M(t){return Ke[t]}function C(t){return Qe[t]}function z(t){return"\\"+en[t]}function W(t,e,n){for(var r=t.length,i=e+(n?1:-1);n?i--:++i<r;){var o=t[i];if(o!=o)return i}return-1}function B(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}function L(t){for(var e,n=[];!(e=t.next()).done;)n.push(e.value);return n}function N(t){var e=-1,n=Array(t.size);return t.forEach((function(t,r){n[++e]=[r,t]})),n}function F(t,e){for(var n=-1,r=t.length,i=0,o=[];++n<r;){var s=t[n];s!==e&&s!==q||(t[n]=q,o[i++]=n)}return o}function U(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=t})),n}function G(t){if(!t||!Ye.test(t))return t.length;for(var e=Ve.lastIndex=0;Ve.test(t);)e++;return e}function V(t){return t.match(Ve)}function X(t){return tn[t]}var Y,$="4.13.1",J=200,H="Expected a function",Z="__lodash_hash_undefined__",q="__lodash_placeholder__",K=1,Q=2,tt=4,et=8,nt=16,rt=32,it=64,ot=128,st=256,at=512,ut=1,ct=2,ht=30,ft="...",lt=150,pt=16,dt=1,gt=2,vt=3,yt=1/0,mt=9007199254740991,_t=17976931348623157e292,bt=NaN,wt=4294967295,xt=wt-1,jt=wt>>>1,St="[object Arguments]",Et="[object Array]",Ot="[object Boolean]",kt="[object Date]",Pt="[object Error]",Dt="[object Function]",Tt="[object GeneratorFunction]",It="[object Map]",At="[object Number]",Rt="[object Object]",Mt="[object Promise]",Ct="[object RegExp]",zt="[object Set]",Wt="[object String]",Bt="[object Symbol]",Lt="[object WeakMap]",Nt="[object WeakSet]",Ft="[object ArrayBuffer]",Ut="[object DataView]",Gt="[object Float32Array]",Vt="[object Float64Array]",Xt="[object Int8Array]",Yt="[object Int16Array]",$t="[object Int32Array]",Jt="[object Uint8Array]",Ht="[object Uint8ClampedArray]",Zt="[object Uint16Array]",qt="[object Uint32Array]",Kt=/\b__p \+= '';/g,Qt=/\b(__p \+=) '' \+/g,te=/(__e\(.*?\)|\b__t\)) \+\n'';/g,ee=/&(?:amp|lt|gt|quot|#39|#96);/g,ne=/[&<>"'`]/g,re=RegExp(ee.source),ie=RegExp(ne.source),oe=/<%-([\s\S]+?)%>/g,se=/<%([\s\S]+?)%>/g,ae=/<%=([\s\S]+?)%>/g,ue=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,ce=/^\w*$/,he=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(\.|\[\])(?:\4|$))/g,fe=/[\\^$.*+?()[\]{}|]/g,le=RegExp(fe.source),pe=/^\s+|\s+$/g,de=/^\s+/,ge=/\s+$/,ve=/[a-zA-Z0-9]+/g,ye=/\\(\\)?/g,me=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,_e=/\w*$/,be=/^0x/i,we=/^[-+]0x[0-9a-f]+$/i,xe=/^0b[01]+$/i,je=/^\[object .+?Constructor\]$/,Se=/^0o[0-7]+$/i,Ee=/^(?:0|[1-9]\d*)$/,Oe=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g,ke=/($^)/,Pe=/['\n\r\u2028\u2029\\]/g,De="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Te="["+De+"]",Ie="[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]",Ae="[a-z\\xdf-\\xf6\\xf8-\\xff]",Re="\\ud83c[\\udffb-\\udfff]",Me="(?:\\ud83c[\\udde6-\\uddff]){2}",Ce="[\\ud800-\\udbff][\\udc00-\\udfff]",ze="[A-Z\\xc0-\\xd6\\xd8-\\xde]",We="(?:"+Ae+"|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])",Be="(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?",Le="[\\ufe0e\\ufe0f]?"+Be+"(?:\\u200d(?:"+["[^\\ud800-\\udfff]",Me,Ce].join("|")+")[\\ufe0e\\ufe0f]?"+Be+")*",Ne="(?:"+["[\\u2700-\\u27bf]",Me,Ce].join("|")+")"+Le,Fe="(?:"+["[^\\ud800-\\udfff]"+Ie+"?",Ie,Me,Ce,"[\\ud800-\\udfff]"].join("|")+")",Ue=RegExp("['’]","g"),Ge=RegExp(Ie,"g"),Ve=RegExp(Re+"(?="+Re+")|"+Fe+Le,"g"),Xe=RegExp([ze+"?"+Ae+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[Te,ze,"$"].join("|")+")","(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[Te,ze+We,"$"].join("|")+")",ze+"?"+We+"+(?:['’](?:d|ll|m|re|s|t|ve))?",ze+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d+",Ne].join("|"),"g"),Ye=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ufe0e\\ufe0f]"),$e=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Je=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","Reflect","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","isFinite","parseInt","setTimeout"],He=-1,Ze={};Ze[Gt]=Ze[Vt]=Ze[Xt]=Ze[Yt]=Ze[$t]=Ze[Jt]=Ze[Ht]=Ze[Zt]=Ze[qt]=!0,Ze[St]=Ze[Et]=Ze[Ft]=Ze[Ot]=Ze[Ut]=Ze[kt]=Ze[Pt]=Ze[Dt]=Ze[It]=Ze[At]=Ze[Rt]=Ze[Ct]=Ze[zt]=Ze[Wt]=Ze[Lt]=!1;var qe={};qe[St]=qe[Et]=qe[Ft]=qe[Ut]=qe[Ot]=qe[kt]=qe[Gt]=qe[Vt]=qe[Xt]=qe[Yt]=qe[$t]=qe[It]=qe[At]=qe[Rt]=qe[Ct]=qe[zt]=qe[Wt]=qe[Bt]=qe[Jt]=qe[Ht]=qe[Zt]=qe[qt]=!0,qe[Pt]=qe[Dt]=qe[Lt]=!1;var Ke={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss"},Qe={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#96;"},tn={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'","&#96;":"`"},en={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},nn=parseFloat,rn=parseInt,on="object"==typeof e&&e,sn=on&&"object"==typeof t&&t,an=sn&&sn.exports===on,un=R("object"==typeof r&&r),cn=R("object"==typeof self&&self),hn=R("object"==typeof this&&this),fn=un||cn||hn||Function("return this")(),ln=function t(e){function n(t){if(Mi(t)&&!ca(t)&&!(t instanceof o)){if(t instanceof i)return t;if(xo.call(t,"__wrapped__"))return ni(t)}return new i(t)}function r(){}function i(t,e){this.__wrapped__=t,this.__actions__=[],this.__chain__=!!e,this.__index__=0,this.__values__=Y}function o(t){this.__wrapped__=t,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=wt,this.__views__=[]}function s(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function R(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function De(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function Te(t){var e=-1,n=t?t.length:0;for(this.__data__=new De;++e<n;)this.add(t[e])}function Ie(t){this.__data__=new R(t)}function Ae(t,e,n,r){return t===Y||Ei(t,yo[n])&&!xo.call(r,n)?e:t}function Re(t,e,n){(n===Y||Ei(t[e],n))&&("number"!=typeof e||n!==Y||e in t)||(t[e]=n)}function Me(t,e,n){var r=t[e];xo.call(t,e)&&Ei(r,n)&&(n!==Y||e in t)||(t[e]=n)}function Ce(t,e){for(var n=t.length;n--;)if(Ei(t[n][0],e))return n;return-1}function ze(t,e,n,r){return gs(t,(function(t,i,o){e(r,t,n(t),o)})),r}function We(t,e){return t&&ar(e,Zi(e),t)}function Be(t,e){for(var n=-1,r=null==t,i=e.length,o=Array(i);++n<i;)o[n]=r?Y:Ji(t,e[n]);return o}function Le(t,e,n){return t==t&&(n!==Y&&(t=t<=n?t:n),e!==Y&&(t=t>=e?t:e)),t}function Ne(t,e,n,r,i,o,s){var a;if(r&&(a=o?r(t,i,o,s):r(t)),a!==Y)return a;if(!Ri(t))return t;var u=ca(t);if(u){if(a=function(t){var e=t.length,n=t.constructor(e);return e&&"string"==typeof t[0]&&xo.call(t,"index")&&(n.index=t.index,n.input=t.input),n}(t),!e)return sr(t,a)}else{var h=Nr(t),f=h==Dt||h==Tt;if(ha(t))return function(t,e){if(e)return t.slice();var n=new t.constructor(t.length);return t.copy(n),n}(t,e);if(h==Rt||h==St||f&&!o){if(B(t))return o?t:{};if(a=function(t){return"function"!=typeof t.constructor||Hr(t)?{}:Fe(Br(t))}(f?{}:t),!e)return function(t,e){return ar(t,Lr(t),e)}(t,We(a,t))}else{if(!qe[h])return o?t:{};a=function(t,e,n,r){var i=t.constructor;switch(e){case Ft:return nr(t);case Ot:case kt:return new i(+t);case Ut:return function(t,e){var n=e?nr(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength)}(t,r);case Gt:case Vt:case Xt:case Yt:case $t:case Jt:case Ht:case Zt:case qt:return function(t,e){var n=e?nr(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}(t,r);case It:return function(t,e,n){return y(e?n(N(t),!0):N(t),o,new t.constructor)}(t,r,n);case At:case Wt:return new i(t);case Ct:return function(t){var e=new t.constructor(t.source,_e.exec(t));return e.lastIndex=t.lastIndex,e}(t);case zt:return function(t,e,n){return y(e?n(U(t),!0):U(t),s,new t.constructor)}(t,r,n);case Bt:return function(t){return ps?Object(ps.call(t)):{}}(t)}}(t,h,Ne,e)}}s||(s=new Ie);var l=s.get(t);if(l)return l;if(s.set(t,a),!u)var p=n?function(t){return pn(t,Zi,Lr)}(t):Zi(t);return c(p||t,(function(i,o){p&&(i=t[o=i]),Me(a,o,Ne(i,e,n,r,o,t,s))})),a}function Fe(t){return Ri(t)?Co(t):{}}function Ve(t,e,n){if("function"!=typeof t)throw new go(H);return Bo((function(){t.apply(Y,n)}),e)}function Ke(t,e,n,r){var i=-1,o=p,s=!0,a=t.length,u=[],c=e.length;if(!a)return u;n&&(e=g(e,P(n))),r?(o=d,s=!1):e.length>=J&&(o=T,s=!1,e=new Te(e));t:for(;++i<a;){var h=t[i],f=n?n(h):h;if(h=r||0!==h?h:0,s&&f==f){for(var l=c;l--;)if(e[l]===f)continue t;u.push(h)}else o(e,f,r)||u.push(h)}return u}function Qe(t,e){var n=!0;return gs(t,(function(t,r,i){return n=!!e(t,r,i)})),n}function tn(t,e,n){for(var r=-1,i=t.length;++r<i;){var o=t[r],s=e(o);if(null!=s&&(a===Y?s==s&&!Li(s):n(s,a)))var a=s,u=o}return u}function en(t,e){var n=[];return gs(t,(function(t,r,i){e(t,r,i)&&n.push(t)})),n}function on(t,e,n,r,i){var o=-1,s=t.length;for(n||(n=Gr),i||(i=[]);++o<s;){var a=t[o];e>0&&n(a)?e>1?on(a,e-1,n,r,i):v(i,a):r||(i[i.length]=a)}return i}function sn(t,e){return t&&ys(t,e,Zi)}function un(t,e){return t&&ms(t,e,Zi)}function cn(t,e){return l(e,(function(e){return Ti(t[e])}))}function hn(t,e){for(var n=0,r=(e=$r(e,t)?[e]:tr(e)).length;null!=t&&n<r;)t=t[ti(e[n++])];return n&&n==r?t:Y}function pn(t,e,n){var r=e(t);return ca(t)?r:v(r,n(t))}function dn(t,e){return t>e}function gn(t,e){return null!=t&&(xo.call(t,e)||"object"==typeof t&&e in t&&null===Br(t))}function vn(t,e){return null!=t&&e in Object(t)}function yn(t,e,n){for(var r=n?d:p,i=t[0].length,o=t.length,s=o,a=Array(o),u=1/0,c=[];s--;){var h=t[s];s&&e&&(h=g(h,P(e))),u=Yo(h.length,u),a[s]=!n&&(e||i>=120&&h.length>=120)?new Te(s&&h):Y}h=t[0];var f=-1,l=a[0];t:for(;++f<i&&c.length<u;){var v=h[f],y=e?e(v):v;if(v=n||0!==v?v:0,!(l?T(l,y):r(c,y,n))){for(s=o;--s;){var m=a[s];if(!(m?T(m,y):r(t[s],y,n)))continue t}l&&l.push(y),c.push(v)}}return c}function mn(t,e,n){$r(e,t)||(t=Qr(t,e=tr(e)),e=ui(e));var r=null==t?t:t[ti(e)];return null==r?Y:a(r,t,n)}function _n(t,e,n,r,i){return t===e||(null==t||null==e||!Ri(t)&&!Mi(e)?t!=t&&e!=e:function(t,e,n,r,i,o){var s=ca(t),a=ca(e),u=Et,c=Et;s||(u=(u=Nr(t))==St?Rt:u),a||(c=(c=Nr(e))==St?Rt:c);var h=u==Rt&&!B(t),f=c==Rt&&!B(e),l=u==c;if(l&&!h)return o||(o=new Ie),s||Ni(t)?Tr(t,e,n,r,i,o):function(t,e,n,r,i,o,s){switch(n){case Ut:if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case Ft:return!(t.byteLength!=e.byteLength||!r(new Io(t),new Io(e)));case Ot:case kt:return+t==+e;case Pt:return t.name==e.name&&t.message==e.message;case At:return t!=+t?e!=+e:t==+e;case Ct:case Wt:return t==e+"";case It:var a=N;case zt:var u=o&ct;if(a||(a=U),t.size!=e.size&&!u)return!1;var c=s.get(t);return c?c==e:(o|=ut,s.set(t,e),Tr(a(t),a(e),r,i,o,s));case Bt:if(ps)return ps.call(t)==ps.call(e)}return!1}(t,e,u,n,r,i,o);if(!(i&ct)){var p=h&&xo.call(t,"__wrapped__"),d=f&&xo.call(e,"__wrapped__");if(p||d){var g=p?t.value():t,v=d?e.value():e;return o||(o=new Ie),n(g,v,r,i,o)}}return!!l&&(o||(o=new Ie),function(t,e,n,r,i,o){var s=i&ct,a=Zi(t),u=a.length;if(u!=Zi(e).length&&!s)return!1;for(var c=u;c--;){var h=a[c];if(!(s?h in e:gn(e,h)))return!1}var f=o.get(t);if(f)return f==e;var l=!0;o.set(t,e);for(var p=s;++c<u;){h=a[c];var d=t[h],g=e[h];if(r)var v=s?r(g,d,h,e,t,o):r(d,g,h,t,e,o);if(!(v===Y?d===g||n(d,g,r,i,o):v)){l=!1;break}p||(p="constructor"==h)}if(l&&!p){var y=t.constructor,m=e.constructor;y!=m&&"constructor"in t&&"constructor"in e&&!("function"==typeof y&&y instanceof y&&"function"==typeof m&&m instanceof m)&&(l=!1)}return o.delete(t),l}(t,e,n,r,i,o))}(t,e,_n,n,r,i))}function bn(t,e,n,r){var i=n.length,o=i,s=!r;if(null==t)return!o;for(t=Object(t);i--;){var a=n[i];if(s&&a[2]?a[1]!==t[a[0]]:!(a[0]in t))return!1}for(;++i<o;){var u=(a=n[i])[0],c=t[u],h=a[1];if(s&&a[2]){if(c===Y&&!(u in t))return!1}else{var f=new Ie;if(r)var l=r(c,h,u,t,e,f);if(!(l===Y?_n(h,c,r,ut|ct,f):l))return!1}}return!0}function wn(t){return!(!Ri(t)||function(t){return!!bo&&bo in t}(t))&&(Ti(t)||B(t)?ko:je).test(ei(t))}function xn(t){return"function"==typeof t?t:null==t?ro:"object"==typeof t?ca(t)?kn(t[0],t[1]):On(t):ao(t)}function jn(t){t=null==t?t:Object(t);var e=[];for(var n in t)e.push(n);return e}function Sn(t,e){return t<e}function En(t,e){var n=-1,r=ki(t)?Array(t.length):[];return gs(t,(function(t,i,o){r[++n]=e(t,i,o)})),r}function On(t){var e=zr(t);return 1==e.length&&e[0][2]?qr(e[0][0],e[0][1]):function(n){return n===t||bn(n,t,e)}}function kn(t,e){return $r(t)&&Zr(e)?qr(ti(t),e):function(n){var r=Ji(n,t);return r===Y&&r===e?Hi(n,t):_n(e,r,Y,ut|ct)}}function Pn(t,e,n,r,i){if(t!==e){if(!ca(e)&&!Ni(e))var o=qi(e);c(o||e,(function(s,a){if(o&&(s=e[a=s]),Ri(s))i||(i=new Ie),function(t,e,n,r,i,o,s){var a=t[n],u=e[n],c=s.get(u);if(c)Re(t,n,c);else{var h=o?o(a,u,n+"",t,e,s):Y,f=h===Y;f&&(h=u,ca(u)||Ni(u)?ca(a)?h=a:Pi(a)?h=sr(a):(f=!1,h=Ne(u,!0)):zi(u)||Oi(u)?Oi(a)?h=Yi(a):!Ri(a)||r&&Ti(a)?(f=!1,h=Ne(u,!0)):h=a:f=!1),s.set(u,h),f&&i(h,u,r,o,s),s.delete(u),Re(t,n,h)}}(t,e,a,n,Pn,r,i);else{var u=r?r(t[a],s,a+"",t,e,i):Y;u===Y&&(u=s),Re(t,a,u)}}))}}function Dn(t,e){var n=t.length;if(n)return Xr(e+=e<0?n:0,n)?t[e]:Y}function Tn(t,e,n){var r=-1;return e=g(e.length?e:[ro],P(Mr())),function(t,e){var n=t.length;for(t.sort(e);n--;)t[n]=t[n].value;return t}(En(t,(function(t,n,i){return{criteria:g(e,(function(e){return e(t)})),index:++r,value:t}})),(function(t,e){return function(t,e,n){for(var r=-1,i=t.criteria,o=e.criteria,s=i.length,a=n.length;++r<s;){var u=rr(i[r],o[r]);if(u)return r>=a?u:u*("desc"==n[r]?-1:1)}return t.index-e.index}(t,e,n)}))}function In(t,e){return t=Object(t),y(e,(function(e,n){return n in t&&(e[n]=t[n]),e}),{})}function An(t,e){for(var n=-1,r=Ir(t),i=r.length,o={};++n<i;){var s=r[n],a=t[s];e(a,s)&&(o[s]=a)}return o}function Rn(t){return function(e){return null==e?Y:e[t]}}function Mn(t,e,n,r){var i=r?j:x,o=-1,s=e.length,a=t;for(t===e&&(e=sr(e)),n&&(a=g(t,P(n)));++o<s;)for(var u=0,c=e[o],h=n?n(c):c;(u=i(a,h,u,r))>-1;)a!==t&&Wo.call(a,u,1),Wo.call(t,u,1);return t}function Cn(t,e){for(var n=t?e.length:0,r=n-1;n--;){var i=e[n];if(n==r||i!==o){var o=i;if(Xr(i))Wo.call(t,i,1);else if($r(i,t))delete t[ti(i)];else{var s=tr(i),a=Qr(t,s);null!=a&&delete a[ti(ui(s))]}}}return t}function zn(t,e){return t+No(Jo()*(e-t+1))}function Wn(t,e){var n="";if(!t||e<1||e>mt)return n;do{e%2&&(n+=t),(e=No(e/2))&&(t+=t)}while(e);return n}function Bn(t,e,n,r){for(var i=-1,o=(e=$r(e,t)?[e]:tr(e)).length,s=o-1,a=t;null!=a&&++i<o;){var u=ti(e[i]);if(Ri(a)){var c=n;if(i!=s){var h=a[u];(c=r?r(h,u,a):Y)===Y&&(c=null==h?Xr(e[i+1])?[]:{}:h)}Me(a,u,c)}a=a[u]}return t}function Ln(t,e,n){var r=-1,i=t.length;e<0&&(e=-e>i?0:i+e),(n=n>i?i:n)<0&&(n+=i),i=e>n?0:n-e>>>0,e>>>=0;for(var o=Array(i);++r<i;)o[r]=t[r+e];return o}function Nn(t,e){var n;return gs(t,(function(t,r,i){return!(n=e(t,r,i))})),!!n}function Fn(t,e,n){var r=0,i=t?t.length:r;if("number"==typeof e&&e==e&&i<=jt){for(;r<i;){var o=r+i>>>1,s=t[o];null!==s&&!Li(s)&&(n?s<=e:s<e)?r=o+1:i=o}return i}return Un(t,e,ro,n)}function Un(t,e,n,r){e=n(e);for(var i=0,o=t?t.length:0,s=e!=e,a=null===e,u=Li(e),c=e===Y;i<o;){var h=No((i+o)/2),f=n(t[h]),l=f!==Y,p=null===f,d=f==f,g=Li(f);if(s)var v=r||d;else v=c?d&&(r||l):a?d&&l&&(r||!p):u?d&&l&&!p&&(r||!g):!p&&!g&&(r?f<=e:f<e);v?i=h+1:o=h}return Yo(o,xt)}function Gn(t,e){for(var n=-1,r=t.length,i=0,o=[];++n<r;){var s=t[n],a=e?e(s):s;if(!n||!Ei(a,u)){var u=a;o[i++]=0===s?0:s}}return o}function Vn(t){return"number"==typeof t?t:Li(t)?bt:+t}function Xn(t){if("string"==typeof t)return t;if(Li(t))return ds?ds.call(t):"";var e=t+"";return"0"==e&&1/t==-yt?"-0":e}function Yn(t,e,n){var r=-1,i=p,o=t.length,s=!0,a=[],u=a;if(n)s=!1,i=d;else if(o>=J){var c=e?null:bs(t);if(c)return U(c);s=!1,i=T,u=new Te}else u=e?[]:a;t:for(;++r<o;){var h=t[r],f=e?e(h):h;if(h=n||0!==h?h:0,s&&f==f){for(var l=u.length;l--;)if(u[l]===f)continue t;e&&u.push(f),a.push(h)}else i(u,f,n)||(u!==a&&u.push(f),a.push(h))}return a}function $n(t,e,n,r){return Bn(t,e,n(hn(t,e)),r)}function Jn(t,e,n,r){for(var i=t.length,o=r?i:-1;(r?o--:++o<i)&&e(t[o],o,t););return n?Ln(t,r?0:o,r?o+1:i):Ln(t,r?o+1:0,r?i:o)}function Hn(t,e){var n=t;return n instanceof o&&(n=n.value()),y(e,(function(t,e){return e.func.apply(e.thisArg,v([t],e.args))}),n)}function Zn(t,e,n){for(var r=-1,i=t.length;++r<i;)var o=o?v(Ke(o,t[r],e,n),Ke(t[r],o,e,n)):t[r];return o&&o.length?Yn(o,e,n):[]}function qn(t,e,n){for(var r=-1,i=t.length,o=e.length,s={};++r<i;){var a=r<o?e[r]:Y;n(s,t[r],a)}return s}function Kn(t){return Pi(t)?t:[]}function Qn(t){return"function"==typeof t?t:ro}function tr(t){return ca(t)?t:Os(t)}function er(t,e,n){var r=t.length;return n=n===Y?r:n,!e&&n>=r?t:Ln(t,e,n)}function nr(t){var e=new t.constructor(t.byteLength);return new Io(e).set(new Io(t)),e}function rr(t,e){if(t!==e){var n=t!==Y,r=null===t,i=t==t,o=Li(t),s=e!==Y,a=null===e,u=e==e,c=Li(e);if(!a&&!c&&!o&&t>e||o&&s&&u&&!a&&!c||r&&s&&u||!n&&u||!i)return 1;if(!r&&!o&&!c&&t<e||c&&n&&i&&!r&&!o||a&&n&&i||!s&&i||!u)return-1}return 0}function ir(t,e,n,r){for(var i=-1,o=t.length,s=n.length,a=-1,u=e.length,c=Xo(o-s,0),h=Array(u+c),f=!r;++a<u;)h[a]=e[a];for(;++i<s;)(f||i<o)&&(h[n[i]]=t[i]);for(;c--;)h[a++]=t[i++];return h}function or(t,e,n,r){for(var i=-1,o=t.length,s=-1,a=n.length,u=-1,c=e.length,h=Xo(o-a,0),f=Array(h+c),l=!r;++i<h;)f[i]=t[i];for(var p=i;++u<c;)f[p+u]=e[u];for(;++s<a;)(l||i<o)&&(f[p+n[s]]=t[i++]);return f}function sr(t,e){var n=-1,r=t.length;for(e||(e=Array(r));++n<r;)e[n]=t[n];return e}function ar(t,e,n,r){n||(n={});for(var i=-1,o=e.length;++i<o;){var s=e[i];Me(n,s,r?r(n[s],t[s],s,n,t):t[s])}return n}function ur(t,e){return function(n,r){var i=ca(n)?u:ze,o=e?e():{};return i(n,t,Mr(r),o)}}function cr(t){return Si((function(e,n){var r=-1,i=n.length,o=i>1?n[i-1]:Y,s=i>2?n[2]:Y;for(o=t.length>3&&"function"==typeof o?(i--,o):Y,s&&Yr(n[0],n[1],s)&&(o=i<3?Y:o,i=1),e=Object(e);++r<i;){var a=n[r];a&&t(e,a,r,o)}return e}))}function hr(t,e){return function(n,r){if(null==n)return n;if(!ki(n))return t(n,r);for(var i=n.length,o=e?i:-1,s=Object(n);(e?o--:++o<i)&&!1!==r(s[o],o,s););return n}}function fr(t){return function(e,n,r){for(var i=-1,o=Object(e),s=r(e),a=s.length;a--;){var u=s[t?a:++i];if(!1===n(o[u],u,o))break}return e}}function lr(t){return function(e){e=$i(e);var n=Ye.test(e)?V(e):Y,r=n?n[0]:e.charAt(0),i=n?er(n,1).join(""):e.slice(1);return r[t]()+i}}function pr(t){return function(e){return y(eo(to(e).replace(Ue,"")),t,"")}}function dr(t){return function(){var e=arguments;switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3]);case 5:return new t(e[0],e[1],e[2],e[3],e[4]);case 6:return new t(e[0],e[1],e[2],e[3],e[4],e[5]);case 7:return new t(e[0],e[1],e[2],e[3],e[4],e[5],e[6])}var n=Fe(t.prototype),r=t.apply(n,e);return Ri(r)?r:n}}function gr(t,e,n){var r=dr(t);return function i(){for(var o=arguments.length,s=Array(o),u=o,c=Rr(i);u--;)s[u]=arguments[u];var h=o<3&&s[0]!==c&&s[o-1]!==c?[]:F(s,c);return(o-=h.length)<n?Or(t,e,mr,i.placeholder,Y,s,h,Y,Y,n-o):a(this&&this!==fn&&this instanceof i?r:t,this,s)}}function vr(t){return function(e,n,r){var i=Object(e);if(n=Mr(n,3),!ki(e))var o=Zi(e);var s=t(o||e,(function(t,e){return o&&(t=i[e=t]),n(t,e,i)}),r);return s>-1?e[o?o[s]:s]:Y}}function yr(t){return Si((function(e){var n=(e=on(e,1)).length,r=n,o=i.prototype.thru;for(t&&e.reverse();r--;){var s=e[r];if("function"!=typeof s)throw new go(H);if(o&&!a&&"wrapper"==Ar(s))var a=new i([],!0)}for(r=a?r:n;++r<n;){var u=Ar(s=e[r]),c="wrapper"==u?ws(s):Y;a=c&&Jr(c[0])&&c[1]==(ot|et|rt|st)&&!c[4].length&&1==c[9]?a[Ar(c[0])].apply(a,c[3]):1==s.length&&Jr(s)?a[u]():a.thru(s)}return function(){var t=arguments,r=t[0];if(a&&1==t.length&&ca(r)&&r.length>=J)return a.plant(r).value();for(var i=0,o=n?e[i].apply(this,t):r;++i<n;)o=e[i].call(this,o);return o}}))}function mr(t,e,n,r,i,o,s,a,u,c){var h=e&ot,f=e&K,l=e&Q,p=e&(et|nt),d=e&at,g=l?Y:dr(t);return function v(){for(var y=arguments.length,m=Array(y),_=y;_--;)m[_]=arguments[_];if(p)var b=Rr(v),w=function(t,e){for(var n=t.length,r=0;n--;)t[n]===e&&r++;return r}(m,b);if(r&&(m=ir(m,r,i,p)),o&&(m=or(m,o,s,p)),y-=w,p&&y<c){var x=F(m,b);return Or(t,e,mr,v.placeholder,n,m,x,a,u,c-y)}var j=f?n:this,S=l?j[t]:t;return y=m.length,a?m=function(t,e){for(var n=t.length,r=Yo(e.length,n),i=sr(t);r--;){var o=e[r];t[r]=Xr(o,n)?i[o]:Y}return t}(m,a):d&&y>1&&m.reverse(),h&&u<y&&(m.length=u),this&&this!==fn&&this instanceof v&&(S=g||dr(S)),S.apply(j,m)}}function _r(t,e){return function(n,r){return function(t,e,n,r){return sn(t,(function(t,i,o){e(r,n(t),i,o)})),r}(n,t,e(r),{})}}function br(t){return function(e,n){var r;if(e===Y&&n===Y)return 0;if(e!==Y&&(r=e),n!==Y){if(r===Y)return n;"string"==typeof e||"string"==typeof n?(e=Xn(e),n=Xn(n)):(e=Vn(e),n=Vn(n)),r=t(e,n)}return r}}function wr(t){return Si((function(e){return e=1==e.length&&ca(e[0])?g(e[0],P(Mr())):g(on(e,1,Vr),P(Mr())),Si((function(n){var r=this;return t(e,(function(t){return a(t,r,n)}))}))}))}function xr(t,e){var n=(e=e===Y?" ":Xn(e)).length;if(n<2)return n?Wn(e,t):e;var r=Wn(e,Lo(t/G(e)));return Ye.test(e)?er(V(r),0,t).join(""):r.slice(0,t)}function jr(t,e,n,r){var i=e&K,o=dr(t);return function e(){for(var s=-1,u=arguments.length,c=-1,h=r.length,f=Array(h+u),l=this&&this!==fn&&this instanceof e?o:t;++c<h;)f[c]=r[c];for(;u--;)f[c++]=arguments[++s];return a(l,i?n:this,f)}}function Sr(t){return function(e,n,r){return r&&"number"!=typeof r&&Yr(e,n,r)&&(n=r=Y),e=(e=Xi(e))==e?e:0,n===Y?(n=e,e=0):n=Xi(n)||0,function(t,e,n,r){for(var i=-1,o=Xo(Lo((e-t)/(n||1)),0),s=Array(o);o--;)s[r?o:++i]=t,t+=n;return s}(e,n,r=r===Y?e<n?1:-1:Xi(r)||0,t)}}function Er(t){return function(e,n){return"string"==typeof e&&"string"==typeof n||(e=Xi(e),n=Xi(n)),t(e,n)}}function Or(t,e,n,r,i,o,s,a,u,c){var h=e&et;e|=h?rt:it,(e&=~(h?it:rt))&tt||(e&=~(K|Q));var f=[t,e,i,h?o:Y,h?s:Y,h?Y:o,h?Y:s,a,u,c],l=n.apply(Y,f);return Jr(t)&&Es(l,f),l.placeholder=r,l}function kr(t){var e=lo[t];return function(t,n){if(t=Xi(t),n=Yo(Gi(n),292)){var r=($i(t)+"e").split("e");return+((r=($i(e(r[0]+"e"+(+r[1]+n)))+"e").split("e"))[0]+"e"+(+r[1]-n))}return e(t)}}function Pr(t){return function(e){var n=Nr(e);return n==It?N(e):n==zt?function(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=[t,t]})),n}(e):function(t,e){return g(e,(function(e){return[e,t[e]]}))}(e,t(e))}}function Dr(t,e,n,r,i,o,s,a){var u=e&Q;if(!u&&"function"!=typeof t)throw new go(H);var c=r?r.length:0;if(c||(e&=~(rt|it),r=i=Y),s=s===Y?s:Xo(Gi(s),0),a=a===Y?a:Gi(a),c-=i?i.length:0,e&it){var h=r,f=i;r=i=Y}var l=u?Y:ws(t),p=[t,e,n,r,i,h,f,o,s,a];if(l&&function(t,e){var n=t[1],r=e[1],i=n|r,o=i<(K|Q|ot),s=r==ot&&n==et||r==ot&&n==st&&t[7].length<=e[8]||r==(ot|st)&&e[7].length<=e[8]&&n==et;if(!o&&!s)return t;r&K&&(t[2]=e[2],i|=n&K?0:tt);var a=e[3];if(a){var u=t[3];t[3]=u?ir(u,a,e[4]):a,t[4]=u?F(t[3],q):e[4]}(a=e[5])&&(u=t[5],t[5]=u?or(u,a,e[6]):a,t[6]=u?F(t[5],q):e[6]),(a=e[7])&&(t[7]=a),r&ot&&(t[8]=null==t[8]?e[8]:Yo(t[8],e[8])),null==t[9]&&(t[9]=e[9]),t[0]=e[0],t[1]=i}(p,l),t=p[0],e=p[1],n=p[2],r=p[3],i=p[4],!(a=p[9]=null==p[9]?u?0:t.length:Xo(p[9]-c,0))&&e&(et|nt)&&(e&=~(et|nt)),e&&e!=K)d=e==et||e==nt?gr(t,e,a):e!=rt&&e!=(K|rt)||i.length?mr.apply(Y,p):jr(t,e,n,r);else var d=function(t,e,n){var r=e&K,i=dr(t);return function e(){return(this&&this!==fn&&this instanceof e?i:t).apply(r?n:this,arguments)}}(t,e,n);return(l?_s:Es)(d,p)}function Tr(t,e,n,r,i,o){var s=i&ct,a=t.length,u=e.length;if(a!=u&&!(s&&u>a))return!1;var c=o.get(t);if(c)return c==e;var h=-1,f=!0,l=i&ut?new Te:Y;for(o.set(t,e);++h<a;){var p=t[h],d=e[h];if(r)var g=s?r(d,p,h,e,t,o):r(p,d,h,t,e,o);if(g!==Y){if(g)continue;f=!1;break}if(l){if(!_(e,(function(t,e){if(!l.has(e)&&(p===t||n(p,t,r,i,o)))return l.add(e)}))){f=!1;break}}else if(p!==d&&!n(p,d,r,i,o)){f=!1;break}}return o.delete(t),f}function Ir(t){return pn(t,qi,js)}function Ar(t){for(var e=t.name+"",n=ss[e],r=xo.call(ss,e)?n.length:0;r--;){var i=n[r],o=i.func;if(null==o||o==t)return i.name}return e}function Rr(t){return(xo.call(n,"placeholder")?n:t).placeholder}function Mr(){var t=n.iteratee||io;return t=t===io?xn:t,arguments.length?t(arguments[0],arguments[1]):t}function Cr(t,e){var n=t.__data__;return function(t){var e=typeof t;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==t:null===t}(e)?n["string"==typeof e?"string":"hash"]:n.map}function zr(t){for(var e=Zi(t),n=e.length;n--;){var r=e[n],i=t[r];e[n]=[r,i,Zr(i)]}return e}function Wr(t,e){var n=function(t,e){return null==t?Y:t[e]}(t,e);return wn(n)?n:Y}function Br(t){return Fo(Object(t))}function Lr(t){return Ro(Object(t))}function Nr(t){return Eo.call(t)}function Fr(t,e,n){for(var r,i=-1,o=(e=$r(e,t)?[e]:tr(e)).length;++i<o;){var s=ti(e[i]);if(!(r=null!=t&&n(t,s)))break;t=t[s]}return r||!!(o=t?t.length:0)&&Ai(o)&&Xr(s,o)&&(ca(t)||Bi(t)||Oi(t))}function Ur(t){var e=t?t.length:Y;return Ai(e)&&(ca(t)||Bi(t)||Oi(t))?k(e,String):null}function Gr(t){return ca(t)||Oi(t)}function Vr(t){return ca(t)&&!(2==t.length&&!Ti(t[0]))}function Xr(t,e){return!!(e=null==e?mt:e)&&("number"==typeof t||Ee.test(t))&&t>-1&&t%1==0&&t<e}function Yr(t,e,n){if(!Ri(n))return!1;var r=typeof e;return!!("number"==r?ki(n)&&Xr(e,n.length):"string"==r&&e in n)&&Ei(n[e],t)}function $r(t,e){if(ca(t))return!1;var n=typeof t;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=t&&!Li(t))||ce.test(t)||!ue.test(t)||null!=e&&t in Object(e)}function Jr(t){var e=Ar(t),r=n[e];if("function"!=typeof r||!(e in o.prototype))return!1;if(t===r)return!0;var i=ws(r);return!!i&&t===i[0]}function Hr(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||yo)}function Zr(t){return t==t&&!Ri(t)}function qr(t,e){return function(n){return null!=n&&n[t]===e&&(e!==Y||t in Object(n))}}function Kr(t,e,n,r,i,o){return Ri(t)&&Ri(e)&&Pn(t,e,Y,Kr,o.set(e,t)),t}function Qr(t,e){return 1==e.length?t:hn(t,Ln(e,0,-1))}function ti(t){if("string"==typeof t||Li(t))return t;var e=t+"";return"0"==e&&1/t==-yt?"-0":e}function ei(t){if(null!=t){try{return wo.call(t)}catch(t){}try{return t+""}catch(t){}}return""}function ni(t){if(t instanceof o)return t.clone();var e=new i(t.__wrapped__,t.__chain__);return e.__actions__=sr(t.__actions__),e.__index__=t.__index__,e.__values__=t.__values__,e}function ri(t,e,n){var r=t?t.length:0;return r?Ln(t,(e=n||e===Y?1:Gi(e))<0?0:e,r):[]}function ii(t,e,n){var r=t?t.length:0;return r?Ln(t,0,(e=r-(e=n||e===Y?1:Gi(e)))<0?0:e):[]}function oi(t,e,n){var r=t?t.length:0;if(!r)return-1;var i=null==n?0:Gi(n);return i<0&&(i=Xo(r+i,0)),w(t,Mr(e,3),i)}function si(t,e,n){var r=t?t.length:0;if(!r)return-1;var i=r-1;return n!==Y&&(i=Gi(n),i=n<0?Xo(r+i,0):Yo(i,r-1)),w(t,Mr(e,3),i,!0)}function ai(t){return t&&t.length?t[0]:Y}function ui(t){var e=t?t.length:0;return e?t[e-1]:Y}function ci(t,e){return t&&t.length&&e&&e.length?Mn(t,e):t}function hi(t){return t?Zo.call(t):t}function fi(t){if(!t||!t.length)return[];var e=0;return t=l(t,(function(t){if(Pi(t))return e=Xo(t.length,e),!0})),k(e,(function(e){return g(t,Rn(e))}))}function li(t,e){if(!t||!t.length)return[];var n=fi(t);return null==e?n:g(n,(function(t){return a(e,Y,t)}))}function pi(t){var e=n(t);return e.__chain__=!0,e}function di(t,e){return e(t)}function gi(t,e){return(ca(t)?c:gs)(t,Mr(e,3))}function vi(t,e){return(ca(t)?h:vs)(t,Mr(e,3))}function yi(t,e){return(ca(t)?g:En)(t,Mr(e,3))}function mi(t,e,n){var r=-1,i=Fi(t),o=i.length,s=o-1;for(e=(n?Yr(t,e,n):e===Y)?1:Le(Gi(e),0,o);++r<e;){var a=zn(r,s),u=i[a];i[a]=i[r],i[r]=u}return i.length=e,i}function _i(){return ho.now()}function bi(t,e,n){return e=n?Y:e,e=t&&null==e?t.length:e,Dr(t,ot,Y,Y,Y,Y,e)}function wi(t,e){var n;if("function"!=typeof e)throw new go(H);return t=Gi(t),function(){return--t>0&&(n=e.apply(this,arguments)),t<=1&&(e=Y),n}}function xi(t,e,n){function r(e){var n=u,r=c;return u=c=Y,d=e,f=t.apply(r,n)}function i(t){var n=t-p;return p===Y||n>=e||n<0||v&&t-d>=h}function o(){var t=_i();if(i(t))return s(t);l=Bo(o,function(t){var n=e-(t-p);return v?Yo(n,h-(t-d)):n}(t))}function s(t){return l=Y,y&&u?r(t):(u=c=Y,f)}function a(){var t=_i(),n=i(t);if(u=arguments,c=this,p=t,n){if(l===Y)return function(t){return d=t,l=Bo(o,e),g?r(t):f}(p);if(v)return l=Bo(o,e),r(p)}return l===Y&&(l=Bo(o,e)),f}var u,c,h,f,l,p,d=0,g=!1,v=!1,y=!0;if("function"!=typeof t)throw new go(H);return e=Xi(e)||0,Ri(n)&&(g=!!n.leading,h=(v="maxWait"in n)?Xo(Xi(n.maxWait)||0,e):h,y="trailing"in n?!!n.trailing:y),a.cancel=function(){d=0,u=p=c=l=Y},a.flush=function(){return l===Y?f:s(_i())},a}function ji(t,e){if("function"!=typeof t||e&&"function"!=typeof e)throw new go(H);var n=function(){var r=arguments,i=e?e.apply(this,r):r[0],o=n.cache;if(o.has(i))return o.get(i);var s=t.apply(this,r);return n.cache=o.set(i,s),s};return n.cache=new(ji.Cache||De),n}function Si(t,e){if("function"!=typeof t)throw new go(H);return e=Xo(e===Y?t.length-1:Gi(e),0),function(){for(var n=arguments,r=-1,i=Xo(n.length-e,0),o=Array(i);++r<i;)o[r]=n[e+r];switch(e){case 0:return t.call(this,o);case 1:return t.call(this,n[0],o);case 2:return t.call(this,n[0],n[1],o)}var s=Array(e+1);for(r=-1;++r<e;)s[r]=n[r];return s[e]=o,a(t,this,s)}}function Ei(t,e){return t===e||t!=t&&e!=e}function Oi(t){return Pi(t)&&xo.call(t,"callee")&&(!zo.call(t,"callee")||Eo.call(t)==St)}function ki(t){return null!=t&&Ai(xs(t))&&!Ti(t)}function Pi(t){return Mi(t)&&ki(t)}function Di(t){return!!Mi(t)&&(Eo.call(t)==Pt||"string"==typeof t.message&&"string"==typeof t.name)}function Ti(t){var e=Ri(t)?Eo.call(t):"";return e==Dt||e==Tt}function Ii(t){return"number"==typeof t&&t==Gi(t)}function Ai(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=mt}function Ri(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function Mi(t){return!!t&&"object"==typeof t}function Ci(t){return"number"==typeof t||Mi(t)&&Eo.call(t)==At}function zi(t){if(!Mi(t)||Eo.call(t)!=Rt||B(t))return!1;var e=Br(t);if(null===e)return!0;var n=xo.call(e,"constructor")&&e.constructor;return"function"==typeof n&&n instanceof n&&wo.call(n)==So}function Wi(t){return Ri(t)&&Eo.call(t)==Ct}function Bi(t){return"string"==typeof t||!ca(t)&&Mi(t)&&Eo.call(t)==Wt}function Li(t){return"symbol"==typeof t||Mi(t)&&Eo.call(t)==Bt}function Ni(t){return Mi(t)&&Ai(t.length)&&!!Ze[Eo.call(t)]}function Fi(t){if(!t)return[];if(ki(t))return Bi(t)?V(t):sr(t);if(Mo&&t[Mo])return L(t[Mo]());var e=Nr(t);return(e==It?N:e==zt?U:Ki)(t)}function Ui(t){return t?(t=Xi(t))===yt||t===-yt?(t<0?-1:1)*_t:t==t?t:0:0===t?t:0}function Gi(t){var e=Ui(t),n=e%1;return e==e?n?e-n:e:0}function Vi(t){return t?Le(Gi(t),0,wt):0}function Xi(t){if("number"==typeof t)return t;if(Li(t))return bt;if(Ri(t)){var e=Ti(t.valueOf)?t.valueOf():t;t=Ri(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(pe,"");var n=xe.test(t);return n||Se.test(t)?rn(t.slice(2),n?2:8):we.test(t)?bt:+t}function Yi(t){return ar(t,qi(t))}function $i(t){return null==t?"":Xn(t)}function Ji(t,e,n){var r=null==t?Y:hn(t,e);return r===Y?n:r}function Hi(t,e){return null!=t&&Fr(t,e,vn)}function Zi(t){var e=Hr(t);if(!e&&!ki(t))return function(t){return Vo(Object(t))}(t);var n=Ur(t),r=!!n,i=n||[],o=i.length;for(var s in t)!gn(t,s)||r&&("length"==s||Xr(s,o))||e&&"constructor"==s||i.push(s);return i}function qi(t){for(var e=-1,n=Hr(t),r=jn(t),i=r.length,o=Ur(t),s=!!o,a=o||[],u=a.length;++e<i;){var c=r[e];s&&("length"==c||Xr(c,u))||"constructor"==c&&(n||!xo.call(t,c))||a.push(c)}return a}function Ki(t){return t?D(t,Zi(t)):[]}function Qi(t){return za($i(t).toLowerCase())}function to(t){return(t=$i(t))&&t.replace(Oe,M).replace(Ge,"")}function eo(t,e,n){return t=$i(t),(e=n?Y:e)===Y&&(e=$e.test(t)?Xe:ve),t.match(e)||[]}function no(t){return function(){return t}}function ro(t){return t}function io(t){return xn("function"==typeof t?t:Ne(t,!0))}function oo(t,e,n){var r=Zi(e),i=cn(e,r);null!=n||Ri(e)&&(i.length||!r.length)||(n=e,e=t,t=this,i=cn(e,Zi(e)));var o=!(Ri(n)&&"chain"in n&&!n.chain),s=Ti(t);return c(i,(function(n){var r=e[n];t[n]=r,s&&(t.prototype[n]=function(){var e=this.__chain__;if(o||e){var n=t(this.__wrapped__);return(n.__actions__=sr(this.__actions__)).push({func:r,args:arguments,thisArg:t}),n.__chain__=e,n}return r.apply(t,v([this.value()],arguments))})})),t}function so(){}function ao(t){return $r(t)?Rn(ti(t)):function(t){return function(e){return hn(e,t)}}(t)}function uo(){return[]}function co(){return!1}var ho=(e=e?ln.defaults({},e,ln.pick(fn,Je)):fn).Date,fo=e.Error,lo=e.Math,po=e.RegExp,go=e.TypeError,vo=e.Array.prototype,yo=e.Object.prototype,mo=e.String.prototype,_o=e["__core-js_shared__"],bo=function(){var t=/[^.]+$/.exec(_o&&_o.keys&&_o.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}(),wo=e.Function.prototype.toString,xo=yo.hasOwnProperty,jo=0,So=wo.call(Object),Eo=yo.toString,Oo=fn._,ko=po("^"+wo.call(xo).replace(fe,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Po=an?e.Buffer:Y,Do=e.Reflect,To=e.Symbol,Io=e.Uint8Array,Ao=Do?Do.enumerate:Y,Ro=Object.getOwnPropertySymbols,Mo="symbol"==typeof(Mo=To&&To.iterator)?Mo:Y,Co=Object.create,zo=yo.propertyIsEnumerable,Wo=vo.splice,Bo=function(t,n){return e.setTimeout.call(fn,t,n)},Lo=lo.ceil,No=lo.floor,Fo=Object.getPrototypeOf,Uo=e.isFinite,Go=vo.join,Vo=Object.keys,Xo=lo.max,Yo=lo.min,$o=e.parseInt,Jo=lo.random,Ho=mo.replace,Zo=vo.reverse,qo=mo.split,Ko=Wr(e,"DataView"),Qo=Wr(e,"Map"),ts=Wr(e,"Promise"),es=Wr(e,"Set"),ns=Wr(e,"WeakMap"),rs=Wr(Object,"create"),is=ns&&new ns,os=!zo.call({valueOf:1},"valueOf"),ss={},as=ei(Ko),us=ei(Qo),cs=ei(ts),hs=ei(es),fs=ei(ns),ls=To?To.prototype:Y,ps=ls?ls.valueOf:Y,ds=ls?ls.toString:Y;n.templateSettings={escape:oe,evaluate:se,interpolate:ae,variable:"",imports:{_:n}},n.prototype=r.prototype,n.prototype.constructor=n,i.prototype=Fe(r.prototype),i.prototype.constructor=i,o.prototype=Fe(r.prototype),o.prototype.constructor=o,s.prototype.clear=function(){this.__data__=rs?rs(null):{}},s.prototype.delete=function(t){return this.has(t)&&delete this.__data__[t]},s.prototype.get=function(t){var e=this.__data__;if(rs){var n=e[t];return n===Z?Y:n}return xo.call(e,t)?e[t]:Y},s.prototype.has=function(t){var e=this.__data__;return rs?e[t]!==Y:xo.call(e,t)},s.prototype.set=function(t,e){return this.__data__[t]=rs&&e===Y?Z:e,this},R.prototype.clear=function(){this.__data__=[]},R.prototype.delete=function(t){var e=this.__data__,n=Ce(e,t);return!(n<0||(n==e.length-1?e.pop():Wo.call(e,n,1),0))},R.prototype.get=function(t){var e=this.__data__,n=Ce(e,t);return n<0?Y:e[n][1]},R.prototype.has=function(t){return Ce(this.__data__,t)>-1},R.prototype.set=function(t,e){var n=this.__data__,r=Ce(n,t);return r<0?n.push([t,e]):n[r][1]=e,this},De.prototype.clear=function(){this.__data__={hash:new s,map:new(Qo||R),string:new s}},De.prototype.delete=function(t){return Cr(this,t).delete(t)},De.prototype.get=function(t){return Cr(this,t).get(t)},De.prototype.has=function(t){return Cr(this,t).has(t)},De.prototype.set=function(t,e){return Cr(this,t).set(t,e),this},Te.prototype.add=Te.prototype.push=function(t){return this.__data__.set(t,Z),this},Te.prototype.has=function(t){return this.__data__.has(t)},Ie.prototype.clear=function(){this.__data__=new R},Ie.prototype.delete=function(t){return this.__data__.delete(t)},Ie.prototype.get=function(t){return this.__data__.get(t)},Ie.prototype.has=function(t){return this.__data__.has(t)},Ie.prototype.set=function(t,e){var n=this.__data__;return n instanceof R&&n.__data__.length==J&&(n=this.__data__=new De(n.__data__)),n.set(t,e),this};var gs=hr(sn),vs=hr(un,!0),ys=fr(),ms=fr(!0);Ao&&!zo.call({valueOf:1},"valueOf")&&(jn=function(t){return L(Ao(t))});var _s=is?function(t,e){return is.set(t,e),t}:ro,bs=es&&1/U(new es([,-0]))[1]==yt?function(t){return new es(t)}:so,ws=is?function(t){return is.get(t)}:so,xs=Rn("length");Ro||(Lr=uo);var js=Ro?function(t){for(var e=[];t;)v(e,Lr(t)),t=Br(t);return e}:Lr;(Ko&&Nr(new Ko(new ArrayBuffer(1)))!=Ut||Qo&&Nr(new Qo)!=It||ts&&Nr(ts.resolve())!=Mt||es&&Nr(new es)!=zt||ns&&Nr(new ns)!=Lt)&&(Nr=function(t){var e=Eo.call(t),n=e==Rt?t.constructor:Y,r=n?ei(n):Y;if(r)switch(r){case as:return Ut;case us:return It;case cs:return Mt;case hs:return zt;case fs:return Lt}return e});var Ss=_o?Ti:co,Es=function(){var t=0,e=0;return function(n,r){var i=_i(),o=pt-(i-e);if(e=i,o>0){if(++t>=lt)return n}else t=0;return _s(n,r)}}(),Os=ji((function(t){var e=[];return $i(t).replace(he,(function(t,n,r,i){e.push(r?i.replace(ye,"$1"):n||t)})),e})),ks=Si((function(t,e){return Pi(t)?Ke(t,on(e,1,Pi,!0)):[]})),Ps=Si((function(t,e){var n=ui(e);return Pi(n)&&(n=Y),Pi(t)?Ke(t,on(e,1,Pi,!0),Mr(n)):[]})),Ds=Si((function(t,e){var n=ui(e);return Pi(n)&&(n=Y),Pi(t)?Ke(t,on(e,1,Pi,!0),Y,n):[]})),Ts=Si((function(t){var e=g(t,Kn);return e.length&&e[0]===t[0]?yn(e):[]})),Is=Si((function(t){var e=ui(t),n=g(t,Kn);return e===ui(n)?e=Y:n.pop(),n.length&&n[0]===t[0]?yn(n,Mr(e)):[]})),As=Si((function(t){var e=ui(t),n=g(t,Kn);return e===ui(n)?e=Y:n.pop(),n.length&&n[0]===t[0]?yn(n,Y,e):[]})),Rs=Si(ci),Ms=Si((function(t,e){e=on(e,1);var n=t?t.length:0,r=Be(t,e);return Cn(t,g(e,(function(t){return Xr(t,n)?+t:t})).sort(rr)),r})),Cs=Si((function(t){return Yn(on(t,1,Pi,!0))})),zs=Si((function(t){var e=ui(t);return Pi(e)&&(e=Y),Yn(on(t,1,Pi,!0),Mr(e))})),Ws=Si((function(t){var e=ui(t);return Pi(e)&&(e=Y),Yn(on(t,1,Pi,!0),Y,e)})),Bs=Si((function(t,e){return Pi(t)?Ke(t,e):[]})),Ls=Si((function(t){return Zn(l(t,Pi))})),Ns=Si((function(t){var e=ui(t);return Pi(e)&&(e=Y),Zn(l(t,Pi),Mr(e))})),Fs=Si((function(t){var e=ui(t);return Pi(e)&&(e=Y),Zn(l(t,Pi),Y,e)})),Us=Si(fi),Gs=Si((function(t){var e=t.length,n=e>1?t[e-1]:Y;return n="function"==typeof n?(t.pop(),n):Y,li(t,n)})),Vs=Si((function(t){var e=(t=on(t,1)).length,n=e?t[0]:0,r=this.__wrapped__,s=function(e){return Be(e,t)};return!(e>1||this.__actions__.length)&&r instanceof o&&Xr(n)?((r=r.slice(n,+n+(e?1:0))).__actions__.push({func:di,args:[s],thisArg:Y}),new i(r,this.__chain__).thru((function(t){return e&&!t.length&&t.push(Y),t}))):this.thru(s)})),Xs=ur((function(t,e,n){xo.call(t,n)?++t[n]:t[n]=1})),Ys=vr(oi),$s=vr(si),Js=ur((function(t,e,n){xo.call(t,n)?t[n].push(e):t[n]=[e]})),Hs=Si((function(t,e,n){var r=-1,i="function"==typeof e,o=$r(e),s=ki(t)?Array(t.length):[];return gs(t,(function(t){var u=i?e:o&&null!=t?t[e]:Y;s[++r]=u?a(u,t,n):mn(t,e,n)})),s})),Zs=ur((function(t,e,n){t[n]=e})),qs=ur((function(t,e,n){t[n?0:1].push(e)}),(function(){return[[],[]]})),Ks=Si((function(t,e){if(null==t)return[];var n=e.length;return n>1&&Yr(t,e[0],e[1])?e=[]:n>2&&Yr(e[0],e[1],e[2])&&(e=[e[0]]),Tn(t,e=1==e.length&&ca(e[0])?e[0]:on(e,1,Vr),[])})),Qs=Si((function(t,e,n){var r=K;if(n.length){var i=F(n,Rr(Qs));r|=rt}return Dr(t,r,e,n,i)})),ta=Si((function(t,e,n){var r=K|Q;if(n.length){var i=F(n,Rr(ta));r|=rt}return Dr(e,r,t,n,i)})),ea=Si((function(t,e){return Ve(t,1,e)})),na=Si((function(t,e,n){return Ve(t,Xi(e)||0,n)}));ji.Cache=De;var ra=Si((function(t,e){var n=(e=1==e.length&&ca(e[0])?g(e[0],P(Mr())):g(on(e,1,Vr),P(Mr()))).length;return Si((function(r){for(var i=-1,o=Yo(r.length,n);++i<o;)r[i]=e[i].call(this,r[i]);return a(t,this,r)}))})),ia=Si((function(t,e){var n=F(e,Rr(ia));return Dr(t,rt,Y,e,n)})),oa=Si((function(t,e){var n=F(e,Rr(oa));return Dr(t,it,Y,e,n)})),sa=Si((function(t,e){return Dr(t,st,Y,Y,Y,on(e,1))})),aa=Er(dn),ua=Er((function(t,e){return t>=e})),ca=Array.isArray,ha=Po?function(t){return t instanceof Po}:co,fa=Er(Sn),la=Er((function(t,e){return t<=e})),pa=cr((function(t,e){if(os||Hr(e)||ki(e))ar(e,Zi(e),t);else for(var n in e)xo.call(e,n)&&Me(t,n,e[n])})),da=cr((function(t,e){if(os||Hr(e)||ki(e))ar(e,qi(e),t);else for(var n in e)Me(t,n,e[n])})),ga=cr((function(t,e,n,r){ar(e,qi(e),t,r)})),va=cr((function(t,e,n,r){ar(e,Zi(e),t,r)})),ya=Si((function(t,e){return Be(t,on(e,1))})),ma=Si((function(t){return t.push(Y,Ae),a(ga,Y,t)})),_a=Si((function(t){return t.push(Y,Kr),a(Sa,Y,t)})),ba=_r((function(t,e,n){t[e]=n}),no(ro)),wa=_r((function(t,e,n){xo.call(t,e)?t[e].push(n):t[e]=[n]}),Mr),xa=Si(mn),ja=cr((function(t,e,n){Pn(t,e,n)})),Sa=cr((function(t,e,n,r){Pn(t,e,n,r)})),Ea=Si((function(t,e){return null==t?{}:(e=g(on(e,1),ti),In(t,Ke(Ir(t),e)))})),Oa=Si((function(t,e){return null==t?{}:In(t,g(on(e,1),ti))})),ka=Pr(Zi),Pa=Pr(qi),Da=pr((function(t,e,n){return e=e.toLowerCase(),t+(n?Qi(e):e)})),Ta=pr((function(t,e,n){return t+(n?"-":"")+e.toLowerCase()})),Ia=pr((function(t,e,n){return t+(n?" ":"")+e.toLowerCase()})),Aa=lr("toLowerCase"),Ra=pr((function(t,e,n){return t+(n?"_":"")+e.toLowerCase()})),Ma=pr((function(t,e,n){return t+(n?" ":"")+za(e)})),Ca=pr((function(t,e,n){return t+(n?" ":"")+e.toUpperCase()})),za=lr("toUpperCase"),Wa=Si((function(t,e){try{return a(t,Y,e)}catch(t){return Di(t)?t:new fo(t)}})),Ba=Si((function(t,e){return c(on(e,1),(function(e){e=ti(e),t[e]=Qs(t[e],t)})),t})),La=yr(),Na=yr(!0),Fa=Si((function(t,e){return function(n){return mn(n,t,e)}})),Ua=Si((function(t,e){return function(n){return mn(t,n,e)}})),Ga=wr(g),Va=wr(f),Xa=wr(_),Ya=Sr(),$a=Sr(!0),Ja=br((function(t,e){return t+e})),Ha=kr("ceil"),Za=br((function(t,e){return t/e})),qa=kr("floor"),Ka=br((function(t,e){return t*e})),Qa=kr("round"),tu=br((function(t,e){return t-e}));return n.after=function(t,e){if("function"!=typeof e)throw new go(H);return t=Gi(t),function(){if(--t<1)return e.apply(this,arguments)}},n.ary=bi,n.assign=pa,n.assignIn=da,n.assignInWith=ga,n.assignWith=va,n.at=ya,n.before=wi,n.bind=Qs,n.bindAll=Ba,n.bindKey=ta,n.castArray=function(){if(!arguments.length)return[];var t=arguments[0];return ca(t)?t:[t]},n.chain=pi,n.chunk=function(t,e,n){e=(n?Yr(t,e,n):e===Y)?1:Xo(Gi(e),0);var r=t?t.length:0;if(!r||e<1)return[];for(var i=0,o=0,s=Array(Lo(r/e));i<r;)s[o++]=Ln(t,i,i+=e);return s},n.compact=function(t){for(var e=-1,n=t?t.length:0,r=0,i=[];++e<n;){var o=t[e];o&&(i[r++]=o)}return i},n.concat=function(){for(var t=arguments.length,e=Array(t?t-1:0),n=arguments[0],r=t;r--;)e[r-1]=arguments[r];return t?v(ca(n)?sr(n):[n],on(e,1)):[]},n.cond=function(t){var e=t?t.length:0,n=Mr();return t=e?g(t,(function(t){if("function"!=typeof t[1])throw new go(H);return[n(t[0]),t[1]]})):[],Si((function(n){for(var r=-1;++r<e;){var i=t[r];if(a(i[0],this,n))return a(i[1],this,n)}}))},n.conforms=function(t){return function(t){var e=Zi(t),n=e.length;return function(r){if(null==r)return!n;for(var i=n;i--;){var o=e[i],s=t[o],a=r[o];if(a===Y&&!(o in Object(r))||!s(a))return!1}return!0}}(Ne(t,!0))},n.constant=no,n.countBy=Xs,n.create=function(t,e){var n=Fe(t);return e?We(n,e):n},n.curry=function t(e,n,r){var i=Dr(e,et,Y,Y,Y,Y,Y,n=r?Y:n);return i.placeholder=t.placeholder,i},n.curryRight=function t(e,n,r){var i=Dr(e,nt,Y,Y,Y,Y,Y,n=r?Y:n);return i.placeholder=t.placeholder,i},n.debounce=xi,n.defaults=ma,n.defaultsDeep=_a,n.defer=ea,n.delay=na,n.difference=ks,n.differenceBy=Ps,n.differenceWith=Ds,n.drop=ri,n.dropRight=ii,n.dropRightWhile=function(t,e){return t&&t.length?Jn(t,Mr(e,3),!0,!0):[]},n.dropWhile=function(t,e){return t&&t.length?Jn(t,Mr(e,3),!0):[]},n.fill=function(t,e,n,r){var i=t?t.length:0;return i?(n&&"number"!=typeof n&&Yr(t,e,n)&&(n=0,r=i),function(t,e,n,r){var i=t.length;for((n=Gi(n))<0&&(n=-n>i?0:i+n),(r=r===Y||r>i?i:Gi(r))<0&&(r+=i),r=n>r?0:Vi(r);n<r;)t[n++]=e;return t}(t,e,n,r)):[]},n.filter=function(t,e){return(ca(t)?l:en)(t,Mr(e,3))},n.flatMap=function(t,e){return on(yi(t,e),1)},n.flatMapDeep=function(t,e){return on(yi(t,e),yt)},n.flatMapDepth=function(t,e,n){return n=n===Y?1:Gi(n),on(yi(t,e),n)},n.flatten=function(t){return t&&t.length?on(t,1):[]},n.flattenDeep=function(t){return t&&t.length?on(t,yt):[]},n.flattenDepth=function(t,e){return t&&t.length?on(t,e=e===Y?1:Gi(e)):[]},n.flip=function(t){return Dr(t,at)},n.flow=La,n.flowRight=Na,n.fromPairs=function(t){for(var e=-1,n=t?t.length:0,r={};++e<n;){var i=t[e];r[i[0]]=i[1]}return r},n.functions=function(t){return null==t?[]:cn(t,Zi(t))},n.functionsIn=function(t){return null==t?[]:cn(t,qi(t))},n.groupBy=Js,n.initial=function(t){return ii(t,1)},n.intersection=Ts,n.intersectionBy=Is,n.intersectionWith=As,n.invert=ba,n.invertBy=wa,n.invokeMap=Hs,n.iteratee=io,n.keyBy=Zs,n.keys=Zi,n.keysIn=qi,n.map=yi,n.mapKeys=function(t,e){var n={};return e=Mr(e,3),sn(t,(function(t,r,i){n[e(t,r,i)]=t})),n},n.mapValues=function(t,e){var n={};return e=Mr(e,3),sn(t,(function(t,r,i){n[r]=e(t,r,i)})),n},n.matches=function(t){return On(Ne(t,!0))},n.matchesProperty=function(t,e){return kn(t,Ne(e,!0))},n.memoize=ji,n.merge=ja,n.mergeWith=Sa,n.method=Fa,n.methodOf=Ua,n.mixin=oo,n.negate=function(t){if("function"!=typeof t)throw new go(H);return function(){return!t.apply(this,arguments)}},n.nthArg=function(t){return t=Gi(t),Si((function(e){return Dn(e,t)}))},n.omit=Ea,n.omitBy=function(t,e){return e=Mr(e),An(t,(function(t,n){return!e(t,n)}))},n.once=function(t){return wi(2,t)},n.orderBy=function(t,e,n,r){return null==t?[]:(ca(e)||(e=null==e?[]:[e]),ca(n=r?Y:n)||(n=null==n?[]:[n]),Tn(t,e,n))},n.over=Ga,n.overArgs=ra,n.overEvery=Va,n.overSome=Xa,n.partial=ia,n.partialRight=oa,n.partition=qs,n.pick=Oa,n.pickBy=function(t,e){return null==t?{}:An(t,Mr(e))},n.property=ao,n.propertyOf=function(t){return function(e){return null==t?Y:hn(t,e)}},n.pull=Rs,n.pullAll=ci,n.pullAllBy=function(t,e,n){return t&&t.length&&e&&e.length?Mn(t,e,Mr(n)):t},n.pullAllWith=function(t,e,n){return t&&t.length&&e&&e.length?Mn(t,e,Y,n):t},n.pullAt=Ms,n.range=Ya,n.rangeRight=$a,n.rearg=sa,n.reject=function(t,e){var n=ca(t)?l:en;return e=Mr(e,3),n(t,(function(t,n,r){return!e(t,n,r)}))},n.remove=function(t,e){var n=[];if(!t||!t.length)return n;var r=-1,i=[],o=t.length;for(e=Mr(e,3);++r<o;){var s=t[r];e(s,r,t)&&(n.push(s),i.push(r))}return Cn(t,i),n},n.rest=Si,n.reverse=hi,n.sampleSize=mi,n.set=function(t,e,n){return null==t?t:Bn(t,e,n)},n.setWith=function(t,e,n,r){return r="function"==typeof r?r:Y,null==t?t:Bn(t,e,n,r)},n.shuffle=function(t){return mi(t,wt)},n.slice=function(t,e,n){var r=t?t.length:0;return r?(n&&"number"!=typeof n&&Yr(t,e,n)?(e=0,n=r):(e=null==e?0:Gi(e),n=n===Y?r:Gi(n)),Ln(t,e,n)):[]},n.sortBy=Ks,n.sortedUniq=function(t){return t&&t.length?Gn(t):[]},n.sortedUniqBy=function(t,e){return t&&t.length?Gn(t,Mr(e)):[]},n.split=function(t,e,n){return n&&"number"!=typeof n&&Yr(t,e,n)&&(e=n=Y),(n=n===Y?wt:n>>>0)?(t=$i(t))&&("string"==typeof e||null!=e&&!Wi(e))&&""==(e=Xn(e))&&Ye.test(t)?er(V(t),0,n):qo.call(t,e,n):[]},n.spread=function(t,e){if("function"!=typeof t)throw new go(H);return e=e===Y?0:Xo(Gi(e),0),Si((function(n){var r=n[e],i=er(n,0,e);return r&&v(i,r),a(t,this,i)}))},n.tail=function(t){return ri(t,1)},n.take=function(t,e,n){return t&&t.length?Ln(t,0,(e=n||e===Y?1:Gi(e))<0?0:e):[]},n.takeRight=function(t,e,n){var r=t?t.length:0;return r?Ln(t,(e=r-(e=n||e===Y?1:Gi(e)))<0?0:e,r):[]},n.takeRightWhile=function(t,e){return t&&t.length?Jn(t,Mr(e,3),!1,!0):[]},n.takeWhile=function(t,e){return t&&t.length?Jn(t,Mr(e,3)):[]},n.tap=function(t,e){return e(t),t},n.throttle=function(t,e,n){var r=!0,i=!0;if("function"!=typeof t)throw new go(H);return Ri(n)&&(r="leading"in n?!!n.leading:r,i="trailing"in n?!!n.trailing:i),xi(t,e,{leading:r,maxWait:e,trailing:i})},n.thru=di,n.toArray=Fi,n.toPairs=ka,n.toPairsIn=Pa,n.toPath=function(t){return ca(t)?g(t,ti):Li(t)?[t]:sr(Os(t))},n.toPlainObject=Yi,n.transform=function(t,e,n){var r=ca(t)||Ni(t);if(e=Mr(e,4),null==n)if(r||Ri(t)){var i=t.constructor;n=r?ca(t)?new i:[]:Ti(i)?Fe(Br(t)):{}}else n={};return(r?c:sn)(t,(function(t,r,i){return e(n,t,r,i)})),n},n.unary=function(t){return bi(t,1)},n.union=Cs,n.unionBy=zs,n.unionWith=Ws,n.uniq=function(t){return t&&t.length?Yn(t):[]},n.uniqBy=function(t,e){return t&&t.length?Yn(t,Mr(e)):[]},n.uniqWith=function(t,e){return t&&t.length?Yn(t,Y,e):[]},n.unset=function(t,e){return null==t||function(t,e){t=Qr(t,e=$r(e,t)?[e]:tr(e));var n=ti(ui(e));return!(null!=t&&gn(t,n))||delete t[n]}(t,e)},n.unzip=fi,n.unzipWith=li,n.update=function(t,e,n){return null==t?t:$n(t,e,Qn(n))},n.updateWith=function(t,e,n,r){return r="function"==typeof r?r:Y,null==t?t:$n(t,e,Qn(n),r)},n.values=Ki,n.valuesIn=function(t){return null==t?[]:D(t,qi(t))},n.without=Bs,n.words=eo,n.wrap=function(t,e){return ia(e=null==e?ro:e,t)},n.xor=Ls,n.xorBy=Ns,n.xorWith=Fs,n.zip=Us,n.zipObject=function(t,e){return qn(t||[],e||[],Me)},n.zipObjectDeep=function(t,e){return qn(t||[],e||[],Bn)},n.zipWith=Gs,n.entries=ka,n.entriesIn=Pa,n.extend=da,n.extendWith=ga,oo(n,n),n.add=Ja,n.attempt=Wa,n.camelCase=Da,n.capitalize=Qi,n.ceil=Ha,n.clamp=function(t,e,n){return n===Y&&(n=e,e=Y),n!==Y&&(n=(n=Xi(n))==n?n:0),e!==Y&&(e=(e=Xi(e))==e?e:0),Le(Xi(t),e,n)},n.clone=function(t){return Ne(t,!1,!0)},n.cloneDeep=function(t){return Ne(t,!0,!0)},n.cloneDeepWith=function(t,e){return Ne(t,!0,!0,e)},n.cloneWith=function(t,e){return Ne(t,!1,!0,e)},n.deburr=to,n.divide=Za,n.endsWith=function(t,e,n){t=$i(t),e=Xn(e);var r=t.length;return n=n===Y?r:Le(Gi(n),0,r),(n-=e.length)>=0&&t.indexOf(e,n)==n},n.eq=Ei,n.escape=function(t){return(t=$i(t))&&ie.test(t)?t.replace(ne,C):t},n.escapeRegExp=function(t){return(t=$i(t))&&le.test(t)?t.replace(fe,"\\$&"):t},n.every=function(t,e,n){var r=ca(t)?f:Qe;return n&&Yr(t,e,n)&&(e=Y),r(t,Mr(e,3))},n.find=Ys,n.findIndex=oi,n.findKey=function(t,e){return b(t,Mr(e,3),sn)},n.findLast=$s,n.findLastIndex=si,n.findLastKey=function(t,e){return b(t,Mr(e,3),un)},n.floor=qa,n.forEach=gi,n.forEachRight=vi,n.forIn=function(t,e){return null==t?t:ys(t,Mr(e,3),qi)},n.forInRight=function(t,e){return null==t?t:ms(t,Mr(e,3),qi)},n.forOwn=function(t,e){return t&&sn(t,Mr(e,3))},n.forOwnRight=function(t,e){return t&&un(t,Mr(e,3))},n.get=Ji,n.gt=aa,n.gte=ua,n.has=function(t,e){return null!=t&&Fr(t,e,gn)},n.hasIn=Hi,n.head=ai,n.identity=ro,n.includes=function(t,e,n,r){t=ki(t)?t:Ki(t),n=n&&!r?Gi(n):0;var i=t.length;return n<0&&(n=Xo(i+n,0)),Bi(t)?n<=i&&t.indexOf(e,n)>-1:!!i&&x(t,e,n)>-1},n.indexOf=function(t,e,n){var r=t?t.length:0;if(!r)return-1;var i=null==n?0:Gi(n);return i<0&&(i=Xo(r+i,0)),x(t,e,i)},n.inRange=function(t,e,n){return e=Xi(e)||0,n===Y?(n=e,e=0):n=Xi(n)||0,function(t,e,n){return t>=Yo(e,n)&&t<Xo(e,n)}(t=Xi(t),e,n)},n.invoke=xa,n.isArguments=Oi,n.isArray=ca,n.isArrayBuffer=function(t){return Mi(t)&&Eo.call(t)==Ft},n.isArrayLike=ki,n.isArrayLikeObject=Pi,n.isBoolean=function(t){return!0===t||!1===t||Mi(t)&&Eo.call(t)==Ot},n.isBuffer=ha,n.isDate=function(t){return Mi(t)&&Eo.call(t)==kt},n.isElement=function(t){return!!t&&1===t.nodeType&&Mi(t)&&!zi(t)},n.isEmpty=function(t){if(ki(t)&&(ca(t)||Bi(t)||Ti(t.splice)||Oi(t)||ha(t)))return!t.length;if(Mi(t)){var e=Nr(t);if(e==It||e==zt)return!t.size}for(var n in t)if(xo.call(t,n))return!1;return!(os&&Zi(t).length)},n.isEqual=function(t,e){return _n(t,e)},n.isEqualWith=function(t,e,n){var r=(n="function"==typeof n?n:Y)?n(t,e):Y;return r===Y?_n(t,e,n):!!r},n.isError=Di,n.isFinite=function(t){return"number"==typeof t&&Uo(t)},n.isFunction=Ti,n.isInteger=Ii,n.isLength=Ai,n.isMap=function(t){return Mi(t)&&Nr(t)==It},n.isMatch=function(t,e){return t===e||bn(t,e,zr(e))},n.isMatchWith=function(t,e,n){return n="function"==typeof n?n:Y,bn(t,e,zr(e),n)},n.isNaN=function(t){return Ci(t)&&t!=+t},n.isNative=function(t){if(Ss(t))throw new fo("This method is not supported with `core-js`. Try https://github.com/es-shims.");return wn(t)},n.isNil=function(t){return null==t},n.isNull=function(t){return null===t},n.isNumber=Ci,n.isObject=Ri,n.isObjectLike=Mi,n.isPlainObject=zi,n.isRegExp=Wi,n.isSafeInteger=function(t){return Ii(t)&&t>=-mt&&t<=mt},n.isSet=function(t){return Mi(t)&&Nr(t)==zt},n.isString=Bi,n.isSymbol=Li,n.isTypedArray=Ni,n.isUndefined=function(t){return t===Y},n.isWeakMap=function(t){return Mi(t)&&Nr(t)==Lt},n.isWeakSet=function(t){return Mi(t)&&Eo.call(t)==Nt},n.join=function(t,e){return t?Go.call(t,e):""},n.kebabCase=Ta,n.last=ui,n.lastIndexOf=function(t,e,n){var r=t?t.length:0;if(!r)return-1;var i=r;if(n!==Y&&(i=((i=Gi(n))<0?Xo(r+i,0):Yo(i,r-1))+1),e!=e)return W(t,i-1,!0);for(;i--;)if(t[i]===e)return i;return-1},n.lowerCase=Ia,n.lowerFirst=Aa,n.lt=fa,n.lte=la,n.max=function(t){return t&&t.length?tn(t,ro,dn):Y},n.maxBy=function(t,e){return t&&t.length?tn(t,Mr(e),dn):Y},n.mean=function(t){return S(t,ro)},n.meanBy=function(t,e){return S(t,Mr(e))},n.min=function(t){return t&&t.length?tn(t,ro,Sn):Y},n.minBy=function(t,e){return t&&t.length?tn(t,Mr(e),Sn):Y},n.stubArray=uo,n.stubFalse=co,n.stubObject=function(){return{}},n.stubString=function(){return""},n.stubTrue=function(){return!0},n.multiply=Ka,n.nth=function(t,e){return t&&t.length?Dn(t,Gi(e)):Y},n.noConflict=function(){return fn._===this&&(fn._=Oo),this},n.noop=so,n.now=_i,n.pad=function(t,e,n){t=$i(t);var r=(e=Gi(e))?G(t):0;if(!e||r>=e)return t;var i=(e-r)/2;return xr(No(i),n)+t+xr(Lo(i),n)},n.padEnd=function(t,e,n){t=$i(t);var r=(e=Gi(e))?G(t):0;return e&&r<e?t+xr(e-r,n):t},n.padStart=function(t,e,n){t=$i(t);var r=(e=Gi(e))?G(t):0;return e&&r<e?xr(e-r,n)+t:t},n.parseInt=function(t,e,n){return n||null==e?e=0:e&&(e=+e),t=$i(t).replace(pe,""),$o(t,e||(be.test(t)?16:10))},n.random=function(t,e,n){if(n&&"boolean"!=typeof n&&Yr(t,e,n)&&(e=n=Y),n===Y&&("boolean"==typeof e?(n=e,e=Y):"boolean"==typeof t&&(n=t,t=Y)),t===Y&&e===Y?(t=0,e=1):(t=Xi(t)||0,e===Y?(e=t,t=0):e=Xi(e)||0),t>e){var r=t;t=e,e=r}if(n||t%1||e%1){var i=Jo();return Yo(t+i*(e-t+nn("1e-"+((i+"").length-1))),e)}return zn(t,e)},n.reduce=function(t,e,n){var r=ca(t)?y:E,i=arguments.length<3;return r(t,Mr(e,4),n,i,gs)},n.reduceRight=function(t,e,n){var r=ca(t)?m:E,i=arguments.length<3;return r(t,Mr(e,4),n,i,vs)},n.repeat=function(t,e,n){return e=(n?Yr(t,e,n):e===Y)?1:Gi(e),Wn($i(t),e)},n.replace=function(){var t=arguments,e=$i(t[0]);return t.length<3?e:Ho.call(e,t[1],t[2])},n.result=function(t,e,n){var r=-1,i=(e=$r(e,t)?[e]:tr(e)).length;for(i||(t=Y,i=1);++r<i;){var o=null==t?Y:t[ti(e[r])];o===Y&&(r=i,o=n),t=Ti(o)?o.call(t):o}return t},n.round=Qa,n.runInContext=t,n.sample=function(t){var e=ki(t)?t:Ki(t),n=e.length;return n>0?e[zn(0,n-1)]:Y},n.size=function(t){if(null==t)return 0;if(ki(t)){var e=t.length;return e&&Bi(t)?G(t):e}if(Mi(t)){var n=Nr(t);if(n==It||n==zt)return t.size}return Zi(t).length},n.snakeCase=Ra,n.some=function(t,e,n){var r=ca(t)?_:Nn;return n&&Yr(t,e,n)&&(e=Y),r(t,Mr(e,3))},n.sortedIndex=function(t,e){return Fn(t,e)},n.sortedIndexBy=function(t,e,n){return Un(t,e,Mr(n))},n.sortedIndexOf=function(t,e){var n=t?t.length:0;if(n){var r=Fn(t,e);if(r<n&&Ei(t[r],e))return r}return-1},n.sortedLastIndex=function(t,e){return Fn(t,e,!0)},n.sortedLastIndexBy=function(t,e,n){return Un(t,e,Mr(n),!0)},n.sortedLastIndexOf=function(t,e){if(t&&t.length){var n=Fn(t,e,!0)-1;if(Ei(t[n],e))return n}return-1},n.startCase=Ma,n.startsWith=function(t,e,n){return t=$i(t),n=Le(Gi(n),0,t.length),t.lastIndexOf(Xn(e),n)==n},n.subtract=tu,n.sum=function(t){return t&&t.length?O(t,ro):0},n.sumBy=function(t,e){return t&&t.length?O(t,Mr(e)):0},n.template=function(t,e,r){var i=n.templateSettings;r&&Yr(t,e,r)&&(e=Y),t=$i(t),e=ga({},e,i,Ae);var o,s,a=ga({},e.imports,i.imports,Ae),u=Zi(a),c=D(a,u),h=0,f=e.interpolate||ke,l="__p += '",p=po((e.escape||ke).source+"|"+f.source+"|"+(f===ae?me:ke).source+"|"+(e.evaluate||ke).source+"|$","g"),d="//# sourceURL="+("sourceURL"in e?e.sourceURL:"lodash.templateSources["+ ++He+"]")+"\n";t.replace(p,(function(e,n,r,i,a,u){return r||(r=i),l+=t.slice(h,u).replace(Pe,z),n&&(o=!0,l+="' +\n__e("+n+") +\n'"),a&&(s=!0,l+="';\n"+a+";\n__p += '"),r&&(l+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),h=u+e.length,e})),l+="';\n";var g=e.variable;g||(l="with (obj) {\n"+l+"\n}\n"),l=(s?l.replace(Kt,""):l).replace(Qt,"$1").replace(te,"$1;"),l="function("+(g||"obj")+") {\n"+(g?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(o?", __e = _.escape":"")+(s?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+l+"return __p\n}";var v=Wa((function(){return Function(u,d+"return "+l).apply(Y,c)}));if(v.source=l,Di(v))throw v;return v},n.times=function(t,e){if((t=Gi(t))<1||t>mt)return[];var n=wt,r=Yo(t,wt);e=Mr(e),t-=wt;for(var i=k(r,e);++n<t;)e(n);return i},n.toFinite=Ui,n.toInteger=Gi,n.toLength=Vi,n.toLower=function(t){return $i(t).toLowerCase()},n.toNumber=Xi,n.toSafeInteger=function(t){return Le(Gi(t),-mt,mt)},n.toString=$i,n.toUpper=function(t){return $i(t).toUpperCase()},n.trim=function(t,e,n){if((t=$i(t))&&(n||e===Y))return t.replace(pe,"");if(!t||!(e=Xn(e)))return t;var r=V(t),i=V(e);return er(r,I(r,i),A(r,i)+1).join("")},n.trimEnd=function(t,e,n){if((t=$i(t))&&(n||e===Y))return t.replace(ge,"");if(!t||!(e=Xn(e)))return t;var r=V(t);return er(r,0,A(r,V(e))+1).join("")},n.trimStart=function(t,e,n){if((t=$i(t))&&(n||e===Y))return t.replace(de,"");if(!t||!(e=Xn(e)))return t;var r=V(t);return er(r,I(r,V(e))).join("")},n.truncate=function(t,e){var n=ht,r=ft;if(Ri(e)){var i="separator"in e?e.separator:i;n="length"in e?Gi(e.length):n,r="omission"in e?Xn(e.omission):r}var o=(t=$i(t)).length;if(Ye.test(t)){var s=V(t);o=s.length}if(n>=o)return t;var a=n-G(r);if(a<1)return r;var u=s?er(s,0,a).join(""):t.slice(0,a);if(i===Y)return u+r;if(s&&(a+=u.length-a),Wi(i)){if(t.slice(a).search(i)){var c,h=u;for(i.global||(i=po(i.source,$i(_e.exec(i))+"g")),i.lastIndex=0;c=i.exec(h);)var f=c.index;u=u.slice(0,f===Y?a:f)}}else if(t.indexOf(Xn(i),a)!=a){var l=u.lastIndexOf(i);l>-1&&(u=u.slice(0,l))}return u+r},n.unescape=function(t){return(t=$i(t))&&re.test(t)?t.replace(ee,X):t},n.uniqueId=function(t){var e=++jo;return $i(t)+e},n.upperCase=Ca,n.upperFirst=za,n.each=gi,n.eachRight=vi,n.first=ai,oo(n,function(){var t={};return sn(n,(function(e,r){xo.call(n.prototype,r)||(t[r]=e)})),t}(),{chain:!1}),n.VERSION=$,c(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(t){n[t].placeholder=n})),c(["drop","take"],(function(t,e){o.prototype[t]=function(n){var r=this.__filtered__;if(r&&!e)return new o(this);n=n===Y?1:Xo(Gi(n),0);var i=this.clone();return r?i.__takeCount__=Yo(n,i.__takeCount__):i.__views__.push({size:Yo(n,wt),type:t+(i.__dir__<0?"Right":"")}),i},o.prototype[t+"Right"]=function(e){return this.reverse()[t](e).reverse()}})),c(["filter","map","takeWhile"],(function(t,e){var n=e+1,r=n==dt||n==vt;o.prototype[t]=function(t){var e=this.clone();return e.__iteratees__.push({iteratee:Mr(t,3),type:n}),e.__filtered__=e.__filtered__||r,e}})),c(["head","last"],(function(t,e){var n="take"+(e?"Right":"");o.prototype[t]=function(){return this[n](1).value()[0]}})),c(["initial","tail"],(function(t,e){var n="drop"+(e?"":"Right");o.prototype[t]=function(){return this.__filtered__?new o(this):this[n](1)}})),o.prototype.compact=function(){return this.filter(ro)},o.prototype.find=function(t){return this.filter(t).head()},o.prototype.findLast=function(t){return this.reverse().find(t)},o.prototype.invokeMap=Si((function(t,e){return"function"==typeof t?new o(this):this.map((function(n){return mn(n,t,e)}))})),o.prototype.reject=function(t){return t=Mr(t,3),this.filter((function(e){return!t(e)}))},o.prototype.slice=function(t,e){t=Gi(t);var n=this;return n.__filtered__&&(t>0||e<0)?new o(n):(t<0?n=n.takeRight(-t):t&&(n=n.drop(t)),e!==Y&&(n=(e=Gi(e))<0?n.dropRight(-e):n.take(e-t)),n)},o.prototype.takeRightWhile=function(t){return this.reverse().takeWhile(t).reverse()},o.prototype.toArray=function(){return this.take(wt)},sn(o.prototype,(function(t,e){var r=/^(?:filter|find|map|reject)|While$/.test(e),s=/^(?:head|last)$/.test(e),a=n[s?"take"+("last"==e?"Right":""):e],u=s||/^find/.test(e);a&&(n.prototype[e]=function(){var e=this.__wrapped__,c=s?[1]:arguments,h=e instanceof o,f=c[0],l=h||ca(e),p=function(t){var e=a.apply(n,v([t],c));return s&&d?e[0]:e};l&&r&&"function"==typeof f&&1!=f.length&&(h=l=!1);var d=this.__chain__,g=!!this.__actions__.length,y=u&&!d,m=h&&!g;if(!u&&l){e=m?e:new o(this);var _=t.apply(e,c);return _.__actions__.push({func:di,args:[p],thisArg:Y}),new i(_,d)}return y&&m?t.apply(this,c):(_=this.thru(p),y?s?_.value()[0]:_.value():_)})})),c(["pop","push","shift","sort","splice","unshift"],(function(t){var e=vo[t],r=/^(?:push|sort|unshift)$/.test(t)?"tap":"thru",i=/^(?:pop|shift)$/.test(t);n.prototype[t]=function(){var t=arguments;if(i&&!this.__chain__){var n=this.value();return e.apply(ca(n)?n:[],t)}return this[r]((function(n){return e.apply(ca(n)?n:[],t)}))}})),sn(o.prototype,(function(t,e){var r=n[e];if(r){var i=r.name+"";(ss[i]||(ss[i]=[])).push({name:e,func:r})}})),ss[mr(Y,Q).name]=[{name:"wrapper",func:Y}],o.prototype.clone=function(){var t=new o(this.__wrapped__);return t.__actions__=sr(this.__actions__),t.__dir__=this.__dir__,t.__filtered__=this.__filtered__,t.__iteratees__=sr(this.__iteratees__),t.__takeCount__=this.__takeCount__,t.__views__=sr(this.__views__),t},o.prototype.reverse=function(){if(this.__filtered__){var t=new o(this);t.__dir__=-1,t.__filtered__=!0}else(t=this.clone()).__dir__*=-1;return t},o.prototype.value=function(){var t=this.__wrapped__.value(),e=this.__dir__,n=ca(t),r=e<0,i=n?t.length:0,o=function(t,e,n){for(var r=-1,i=n.length;++r<i;){var o=n[r],s=o.size;switch(o.type){case"drop":t+=s;break;case"dropRight":e-=s;break;case"take":e=Yo(e,t+s);break;case"takeRight":t=Xo(t,e-s)}}return{start:t,end:e}}(0,i,this.__views__),s=o.start,a=o.end,u=a-s,c=r?a:s-1,h=this.__iteratees__,f=h.length,l=0,p=Yo(u,this.__takeCount__);if(!n||i<J||i==u&&p==u)return Hn(t,this.__actions__);var d=[];t:for(;u--&&l<p;){for(var g=-1,v=t[c+=e];++g<f;){var y=h[g],m=y.iteratee,_=y.type,b=m(v);if(_==gt)v=b;else if(!b){if(_==dt)continue t;break t}}d[l++]=v}return d},n.prototype.at=Vs,n.prototype.chain=function(){return pi(this)},n.prototype.commit=function(){return new i(this.value(),this.__chain__)},n.prototype.next=function(){this.__values__===Y&&(this.__values__=Fi(this.value()));var t=this.__index__>=this.__values__.length;return{done:t,value:t?Y:this.__values__[this.__index__++]}},n.prototype.plant=function(t){for(var e,n=this;n instanceof r;){var i=ni(n);i.__index__=0,i.__values__=Y,e?o.__wrapped__=i:e=i;var o=i;n=n.__wrapped__}return o.__wrapped__=t,e},n.prototype.reverse=function(){var t=this.__wrapped__;if(t instanceof o){var e=t;return this.__actions__.length&&(e=new o(this)),(e=e.reverse()).__actions__.push({func:di,args:[hi],thisArg:Y}),new i(e,this.__chain__)}return this.thru(hi)},n.prototype.toJSON=n.prototype.valueOf=n.prototype.value=function(){return Hn(this.__wrapped__,this.__actions__)},Mo&&(n.prototype[Mo]=function(){return this}),n}();(cn||{})._=ln,(i=function(){return ln}.call(e,n,e,t))!==Y&&(t.exports=i)}).call(this)}).call(e,n(4)(t),n(3))},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}}])},function(t,e,n){"use strict";(function(t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var n=function(e){if(!t||!t.env||!t.env.KOJI_SECRETS)return null;try{var n=JSON.parse(t.env.KOJI_SECRETS);return n[e]||console.warn('[@withkoji/vcc] Unable to resolve decrypted value for "'.concat(e,'". Secret is not present in environment.')),n[e]||null}catch(t){console.warn("[@withkoji/vcc] No KOJI_SECRETS environment variable detected. Try closing this terminal window and opening a new tab.")}return null};e.default=n}).call(this,n(4))},function(t,e){var n,r,i=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function a(t){if(n===setTimeout)return setTimeout(t,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(t){n=o}try{r="function"==typeof clearTimeout?clearTimeout:s}catch(t){r=s}}();var u,c=[],h=!1,f=-1;function l(){h&&u&&(h=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!h){var t=a(l);h=!0;for(var e=c.length;e;){for(u=c,c=[];++f<e;)u&&u[f].run();f=-1,e=c.length}u=null,h=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===s||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function g(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];c.push(new d(t,e)),1!==c.length||h||a(p)},d.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=g,i.addListener=g,i.once=g,i.off=g,i.removeListener=g,i.removeAllListeners=g,i.emit=g,i.prependListener=g,i.prependOnceListener=g,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(t){t.exports=JSON.parse('{"assets":{"gamepaused":"https://images.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/6dfx9-gamepaused.png","tileset":"https://images.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/pbnvu-tiles.png","mapArray":["https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/p1bsc-map0.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/3z8gv-map1.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/5e3by-map2.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/d5ysu-map3.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/ejayr-map4.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/9j5wy-map5.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/vszy1-map6.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/r5ugk-map7.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/ifavq-map8.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/bev8g-map9.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/q225a-map10.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/eyw15-map11.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/np2s7-map12.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/tvmjg-map13.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/kalh6-map14.json","https://objects.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/f6gnm-map15.json"]},"@@editor":[{"key":"assets","name":"Assets","icon":"💾","source":"assets.json","fields":[{"key":"gamepaused","name":"gamepaused img","type":"image"},{"key":"tileset","name":"Tile Set","description":"set of tiles to render to texturize the map","type":"image"},{"key":"mapArray","name":"Tilemap array","description":"Contains all the Tilemaps","type":"file[]"}]},{"key":"settings","name":"App settings","icon":"⚙️","source":"settings.json","fields":[{"key":"playerImg","name":"Player Sprite","description":"The sprite you\'ll see as the player.","type":"image"},{"key":"playerImgSize","name":"PLayer Image size","description":"If you change the sprite for the player, you also need to specify it\'s size here.","type":"range","typeOptions":{"min":8,"max":32,"step":1}},{"key":"flip","name":"Flip img","description":"If the img is facing left, check this to make it start facing the right","type":"boolean"},{"key":"countdown","name":"Countdown ?","description":"to Countdown or not to countdown?","type":"boolean"},{"key":"time","name":"Timer","description":"How long do you want to wait before loosing?","type":"range","typeOptions":{"min":30,"max":240,"step":30}},{"key":"backgroundColor","name":"Background Color","description":"I like pink, how bout you?","type":"color"},{"key":"textColor","name":"counter text color","type":"color"},{"key":"menuIcon","name":"Start menu button icon","description":"The icon you see before the game starts","type":"image"},{"key":"retryIcon","name":"Game over retry button icon","description":"The icon you see when you loose","type":"image"}]}],"settings":{"playerImg":"https://images.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/rhp2y-player.png","countdown":true,"time":120,"backgroundColor":"#d76b6b","playerImgSize":21,"menuIcon":"https://images.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/s51bz-playIcon.png","retryIcon":"https://images.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/nvuhq-retryIcon.png","textColor":"#000","flip":true},"deploy":{"frontend":{"output":"frontend/dist","type":"static","commands":["cd ./frontend/","npm install","export NODE_ENV=production && npm run build"]}},"develop":{"frontend":{"path":"./frontend","port":8080,"events":{"started":"[webpack] Frontend server started","building":"[webpack] Frontend building","built":"Compiled successfully.","build-error":"[webpack] Frontend build error"},"startCommand":"npm start"}},"serviceMap":{"remy":"https://remy-88450dd4-49ae-47a2-b1a0-24eb5dafb986.koji-staging.com","frontend":"https://8080-ff104c98-8164-474e-bba1-7bc0102efbf4.koji-staging.com"},"metadata":{"projectId":"f852518e-69be-4b7d-9c6d-c224dfe35cd0"}}')},function(t,e,n){"use strict";n.r(e);var r=n(0),i=n.n(r);class o{constructor(t){this.scene=t}static register(t,e){o.prototype[t]=e}}var s=o,a={setEventEmitter(t,e){return void 0===e&&(e=Phaser.Events.EventEmitter),this._privateEE=void 0===t,this._eventEmitter=this._privateEE?new e:t,this},destroyEventEmitter(){this._eventEmitter&&this._privateEE&&this._eventEmitter.shutdown()},getEventEmitter(){return this._eventEmitter},on:function(){return this._eventEmitter&&this._eventEmitter.on.apply(this._eventEmitter,arguments),this},once:function(){return this._eventEmitter&&this._eventEmitter.once.apply(this._eventEmitter,arguments),this},off:function(){return this._eventEmitter&&this._eventEmitter.off.apply(this._eventEmitter,arguments),this},emit:function(){return this._eventEmitter&&this._eventEmitter.emit.apply(this._eventEmitter,arguments),this},addListener:function(){return this._eventEmitter&&this._eventEmitter.addListener.apply(this._eventEmitter,arguments),this},removeListener:function(){return this._eventEmitter&&this._eventEmitter.removeListener.apply(this._eventEmitter,arguments),this},removeAllListeners:function(){return this._eventEmitter&&this._eventEmitter.removeAllListeners.apply(this._eventEmitter,arguments),this},listenerCount:function(){return this._eventEmitter?this._eventEmitter.listenerCount.apply(this._eventEmitter,arguments):0},listeners:function(){return this._eventEmitter?this._eventEmitter.listeners.apply(this._eventEmitter,arguments):[]}};const u=Phaser.Utils.Objects.GetValue;class c{constructor(t,e){this.parent=t,this._isRunning=!1,this.tickingState=!1,this.setEventEmitter(u(e,"eventEmitter",void 0)),this.setTickingMode(u(e,"tickingMode",1))}boot(){2!==this.tickingMode||this.tickingState||this.startTicking()}shutdown(){this.destroyEventEmitter(),this.tickingState&&this.stopTicking()}setTickingMode(t){"string"==typeof t&&(t=h[t]),this.tickingMode=t}startTicking(){this.tickingState=!0}stopTicking(){this.tickingState=!1}get isRunning(){return this._isRunning}set isRunning(t){this._isRunning!==t&&(this._isRunning=t,1===this.tickingMode&&t!=this.tickingState&&(t?this.startTicking():this.stopTicking()))}start(){return this.isRunning=!0,this}pause(){return this.isRunning=!1,this}resume(){return this.isRunning=!0,this}stop(){return this.isRunning=!1,this}complete(){this.isRunning=!1,this.emit("complete",this.parent,this)}}Object.assign(c.prototype,a);const h={no:0,lazy:1,always:2};var f=c;const l=Phaser.Scene;var p=function(t){return t instanceof l},d=function(t){return p(t)?t:t.scene&&p(t.scene)?t.scene:t.parent&&t.parent.scene&&p(t.parent.scene)?t.parent.scene:void 0};const g=Phaser.Utils.Objects.GetValue;const v=0,m=1,_="IDLE";var b=class extends f{constructor(t,e){var n=d(t);n===t&&(t=void 0),super(n,e),this.scene=n,this.gameObject=t,t&&t.setInteractive(g(e,"inputConfig",void 0)),this.resetFromJSON(e),this.boot()}resetFromJSON(t){return this.setEnable(g(t,"enable",!0)),void 0===this.gameObject?this.bounds=g(t,"bounds",void 0):this.bounds=void 0,this.tracerState=v,this.pointer=void 0,this.lastPointer=void 0,this.movedState=!1,this.isTouchingAnyObject=!1,this}boot(){super.boot(),this.gameObject?this.gameObject.on("pointerdown",this.onPointerDown,this):this.scene.input.on("pointerdown",this.onPointerDown,this),this.scene.input.on("pointerup",this.onPointerUp,this),this.scene.input.on("pointermove",this.onPointerMove,this),this.scene.events.once("shutdown",this.destroy,this)}shutdown(){this.gameObject?this.gameObject.off("pointerdown",this.onPointerDown,this):this.scene&&this.scene.input.off("pointerdown",this.onPointerDown,this),this.scene&&(this.scene.input.off("pointerup",this.onPointerUp,this),this.scene.input.off("pointermove",this.onPointerMove,this),this.scene.events.off("destroy",this.destroy,this),this.scene=void 0),this.scene=void 0,this.gameObject=void 0,this.bounds=void 0,this.pointer=void 0,this.lastPointer=void 0,this.movedState=!1,super.shutdown()}destroy(){this.shutdown()}setEnable(t){return void 0===t&&(t=!0),this.enable===t?this:(t||this.dragCancel(),this.enable=t,this)}onPointerDown(t,e){this.enable&&(void 0===this.pointer&&(!this.bounds||this.bounds.contains(t.x,t.y))&&this.pointer!==t&&(this.pointer=t,this.lastPointer=t,this.movedState=!1,this.tracerState=m,void 0===this.gameObject&&(this.isTouchingAnyObject=e.length>0),this.onDragStart()))}onPointerUp(t){this.enable&&((!this.bounds||this.bounds.contains(t.x,t.y))&&this.pointer===t&&(this.pointer=void 0,this.movedState=!1,this.tracerState=v,this.onDragEnd()))}onPointerMove(t){if(this.enable&&t.isDown){var e=!this.bounds||this.bounds.contains(t.x,t.y),n=this.pointer===t;!n&&e||(n&&!e?this.onPointerUp(t):(this.movedState||(this.movedState=t.x!==t.downX||t.y!==t.downY),this.movedState&&this.onDrag()))}}dragCancel(){return this.tracerState===m&&this.onDragEnd(),this.pointer=void 0,this.tracerState=v,this}onDragStart(){this.emit("dragstart",this)}onDragEnd(){this.emit("dragend",this)}onDrag(){this.emit("drag",this)}preUpdate(t,e){}postUpdate(t,e){}startTicking(){super.startTicking(),this.scene.events.on("preupdate",this.preUpdate,this),this.scene.events.on("postupdate",this.postUpdate,this)}stopTicking(){super.stopTicking(),this.scene&&(this.scene.events.off("preupdate",this.preUpdate,this),this.scene.events.off("postupdate",this.postUpdate,this))}setRecongizedStateObject(t){return this.recongizedState=t,this}get state(){return this.recongizedState.state}set state(t){this.recongizedState.state=t}cancel(){return this.state=_,this}},w=n(1),j=n.n(w);class S{constructor(t){var e=j()(t,"states",void 0);e&&this.addStates(e);var n=j()(t,"extend",void 0);if(n)for(var r in n)this.hasOwnProperty(r)&&void 0!==this[r]||(this[r]=n[r]);var i=j()(t,"eventEmitter",void 0),o=j()(t,"EventEmitterClass",void 0);this.setEventEmitter(i,o),this._stateLock=!1,this.resetFromJSON(t)}shutdown(){this.destroyEventEmitter()}destroy(){this.shutdown()}resetFromJSON(t){this.setEnable(j()(t,"enable",!0)),this.start(j()(t,"start",void 0));var e=j()(t,"init",void 0);return e&&e.call(this),this}toJSON(){return{curState:this.state,prevState:this.prevState,enable:this.enable,start:this._start}}setEnable(t){return void 0===t&&(t=!0),this.enable=t,this}set state(t){if(this.enable&&!this._stateLock&&this._state!==t){if(this._prevState=this._state,this._state=t,this._stateLock=!0,this.emit("statechange",this),null!=this._prevState){var e="exit_"+this._prevState,n=this[e];n&&n.call(this),this.emit(e,this)}if(this._stateLock=!1,null!=this._state){var r="enter_"+this._state,i=this[r];i&&i.call(this),this.emit(r,this)}}}get state(){return this._state}get prevState(){return this._prevState}start(t){return this._start=t,this._prevState=void 0,this._state=t,this}goto(t){return null!=t&&(this.state=t),this}next(){var t,e=this["next_"+this.state];return e&&(t="string"==typeof e?e:e.call(this)),this.goto(t),this}addState(t,e){var n=j()(e,"next",void 0);n&&(this["next_"+t]=n);var r=j()(e,"exit",void 0);r&&(this["exit_"+t]=r);var i=j()(e,"enter",void 0);return i&&(this["enter_"+t]=i),this}addStates(t){for(var e in t)this.addState(e,t[e]);return this}update(t,e,n){void 0===n&&(n="update");var r=this[n+"_"+this.state];r&&r.call(this,t,e)}preupdate(t,e){this.update(t,e,"preupdate")}postupdate(t,e){this.update(t,e,"postupdate")}}Object.assign(S.prototype,a);var E=S;const O=Phaser.Utils.Objects.GetValue,k=Phaser.Math.Distance.Between;const P="IDLE",D="BEGIN",T="RECOGNIZED";var I=class extends b{constructor(t,e){super(t,e);var n=this,r={states:{IDLE:{enter:function(){n.stop(),n.tapsCount=0,n.x=0,n.y=0,n.worldX=0,n.worldY=0},exit:function(){var t=n.lastPointer;n.x=t.x,n.y=t.y,n.worldX=t.worldX,n.worldY=t.worldY}},BEGIN:{enter:function(){n.start(),n.tapsCount=0,n.emit("tappingstart",n,n.gameObject,n.lastPointer)}},RECOGNIZED:{enter:function(){n.start(),n.emit("tap",n,n.gameObject,n.lastPointer),n.emit(`${n.tapsCount}tap`,n,n.gameObject,n.lastPointer)}}},init:function(){this.state=P},eventEmitter:!1};this.setRecongizedStateObject(new E(r))}resetFromJSON(t){super.resetFromJSON(t),this.setMaxHoldTime(O(t,"time",250)),this.setTapInterval(O(t,"tapInterval",200)),this.setDragThreshold(O(t,"threshold",9)),this.setTapOffset(O(t,"tapOffset",10));var e=O(t,"taps",void 0);return void 0!==e?this.setTaps(e):(this.setMaxTaps(O(t,"maxTaps",void 0)),this.setMinTaps(O(t,"minTaps",void 0))),this}onDragStart(){switch(this.state){case P:this.state=D;break;case D:var t=this.lastPointer;k(t.upX,t.upY,t.x,t.y)>this.tapOffset&&(this.state=T,this.state=D);break;case T:this.state=D}}onDragEnd(){this.state===D&&(this.tapsCount++,this.emit("tapping",this,this.gameObject,this.lastPointer),void 0!==this.maxTaps&&this.tapsCount===this.maxTaps&&(this.state=T))}onDrag(){this.state!==P&&this.pointer.getDistance()>this.dragThreshold&&(this.state=P)}preUpdate(t,e){if(this.state===D){var n=this.lastPointer;if(n.isDown)t-n.downTime>this.holdTime&&(this.state=P);else t-n.upTime>this.tapInterval&&(void 0===this.minTaps||this.tapsCount>=this.minTaps?this.state=T:this.state=P)}}postUpdate(t,e){this.state===T&&(this.state=P)}get isTapped(){return this.state===T}setMaxHoldTime(t){return this.holdTime=t,this}setTapInterval(t){return this.tapInterval=t,this}setDragThreshold(t){return this.dragThreshold=t,this}setTapOffset(t){return this.tapOffset=t,this}setMaxTaps(t){return this.maxTaps=t,this}setMinTaps(t){return this.minTaps=t,this}setTaps(t,e){return void 0===e&&(e=t),this.setMinTaps(t).setMaxTaps(e),this}},A=function(t){return null==t||""===t||0===t.length},R=function(t,e,n){if("object"==typeof t)if(A(e)){if(null==n)return;"object"==typeof n&&(t=n)}else{"string"==typeof e&&(e=e.split("."));var r=e.pop();(function(t,e,n){void 0===n&&(n={});var r=t;if(A(e));else{var i;"string"==typeof e&&(e=e.split("."));for(var o=0,s=e.length;o<s;o++){var a;if(null==r[i=e[o]]||"object"!=typeof r[i])a=o===s-1?n:{},r[i]=a;r=r[i]}}return r}(t,e))[r]=n}};const M=Phaser.GameObjects.GameObject;var C=function(t){return t instanceof M};s.register("tap",(function(t,e){return C(t)||(e=t,t=this.scene),new I(t,e)})),R(window,"RexPlugins.Gestures.Tap",I);const z=Phaser.Utils.Objects.GetValue;const W="IDLE",B="BEGIN",L="RECOGNIZED";var N=class extends b{constructor(t,e){super(t,e);var n=this,r={states:{IDLE:{enter:function(){n.x=0,n.y=0,n.worldX=0,n.worldY=0},exit:function(){var t=n.lastPointer;n.x=t.x,n.y=t.y,n.worldX=t.worldX,n.worldY=t.worldY}},BEGIN:{enter:function(){n.start()},exit:function(){n.stop()}},RECOGNIZED:{enter:function(){n.emit("pressstart",n,n.gameObject,n.lastPointer)},exit:function(){n.emit("pressend",n,n.gameObject,n.lastPointer)}}},init:function(){this.state=W},eventEmitter:!1};this.setRecongizedStateObject(new E(r))}resetFromJSON(t){return super.resetFromJSON(t),this.setDragThreshold(z(t,"threshold",9)),this.setMinHoldTime(z(t,"time",251)),this}onDragStart(){this.state=0===this.holdTime?L:B}onDragEnd(){this.state=W}onDrag(){this.state!==W&&this.pointer.getDistance()>this.dragThreshold&&(this.state=W)}preUpdate(t,e){this.state===B&&(t-this.pointer.downTime>=this.holdTime&&(this.state=L))}get isPressed(){return this.state===L}setDragThreshold(t){return this.dragThreshold=t,this}setMinHoldTime(t){return this.holdTime=t,this}};s.register("press",(function(t,e){return C(t)||(e=t,t=this.scene),new N(t,e)})),R(window,"RexPlugins.Gestures.Press",N);const F=Phaser.Utils.Objects.GetValue;const U="IDLE",G="BEGIN",V="RECOGNIZED";var X=class extends b{constructor(t,e){super(t,e);var n=this,r={states:{IDLE:{},BEGIN:{enter:function(){var t=n.pointer;n.startX=t.x,n.startY=t.y,n.startWorldX=t.worldX,n.startWorldY=t.worldY}},RECOGNIZED:{enter:function(){n.emit("panstart",n,n.gameObject,n.lastPointer)},exit:function(){var t=n.lastPointer;n.endX=t.x,n.endY=t.y,n.endWorldX=t.worldX,n.endWorldY=t.worldY,n.emit("panend",n,n.gameObject,n.lastPointer)}}},init:function(){this.state=U},eventEmitter:!1};this.setRecongizedStateObject(new E(r))}resetFromJSON(t){return super.resetFromJSON(t),this.setDragThreshold(F(t,"threshold",10)),this}onDragStart(){this.state=0===this.dragThreshold?V:G}onDragEnd(){this.state=U}onDrag(){switch(this.state){case G:this.pointer.getDistance()>=this.dragThreshold&&(this.state=V);break;case V:var t=this.pointer.position,e=this.pointer.prevPosition;this.dx=t.x-e.x,this.dy=t.y-e.y;var n=this.pointer;self.x=n.x,self.y=n.y,self.worldX=n.worldX,self.worldY=n.worldY,this.emit("pan",this)}}get isPan(){return this.state===V}setDragThreshold(t){return this.dragThreshold=t,this}};s.register("pan",(function(t,e){return C(t)||(e=t,t=this.scene),new X(t,e)})),R(window,"RexPlugins.Gestures.Pan",X);const Y=Phaser.Math.Distance.Between,$=Phaser.Math.Angle.Between;var J={getDt:function(){return this.scene.sys.game.loop.delta},getVelocity:function(){var t=this.pointer.position,e=this.pointer.prevPosition;return Y(e.x,e.y,t.x,t.y)/(.001*this.getDt())},getVelocityX:function(){var t=this.pointer.position,e=this.pointer.prevPosition;return Math.abs(t.x-e.x)/(.001*this.getDt())},getVelocityY:function(){var t=this.pointer.position,e=this.pointer.prevPosition;return Math.abs(t.y-e.y)/(.001*this.getDt())},getVelocityAngle:function(){var t=this.pointer.position,e=this.pointer.prevPosition;return $(e.x,e.y,t.x,t.y)}},H={"up&down":0,"left&right":1,"4dir":2,"8dir":3},Z={},q=function(t,e,n){switch(void 0===n?n={}:!0===n&&(n=Z),n.left=!1,n.right=!1,n.up=!1,n.down=!1,t=(t+360)%360,e){case 0:t<180?n.down=!0:n.up=!0;break;case 1:t>90&&t<=270?n.left=!0:n.right=!0;break;case 2:t>45&&t<=135?n.down=!0:t>135&&t<=225?n.left=!0:t>225&&t<=315?n.up=!0:n.right=!0;break;case 3:t>22.5&&t<=67.5?(n.down=!0,n.right=!0):t>67.5&&t<=112.5?n.down=!0:t>112.5&&t<=157.5?(n.down=!0,n.left=!0):t>157.5&&t<=202.5?n.left=!0:t>202.5&&t<=247.5?(n.left=!0,n.up=!0):t>247.5&&t<=292.5?n.up=!0:t>292.5&&t<=337.5?(n.up=!0,n.right=!0):n.right=!0}return n};const K=Phaser.Utils.Objects.GetValue,Q=Phaser.Math.RadToDeg;class tt extends b{constructor(t,e){super(t,e);var n=this,r={states:{IDLE:{},BEGIN:{enter:function(){n.validDrag=!1}},RECOGNIZED:{enter:function(){n.start(),n.updateDirectionStates(),n.emit("swipe",n,n.gameObject,n.lastPointer)},exit:function(){n.stop(),n.clearDirectionStates()}}},init:function(){this.state=et},eventEmitter:!1};this.setRecongizedStateObject(new E(r)),this.clearDirectionStates()}resetFromJSON(t){return super.resetFromJSON(t),this.setDragThreshold(K(t,"threshold",10)),this.setMinDragVelocity(K(t,"velocityThreshold",1e3)),this.setDirectionMode(K(t,"dir","8dir")),this}onDragStart(){this.state=nt}onDragEnd(){this.state=et}onDrag(){this.state===nt&&(this.vaildDrag||(this.vaildDrag=0===this.dragThreshold||this.pointer.getDistance()>=this.dragThreshold),this.vaildDrag&&this.dragVelocity>this.minDragVelocity&&(this.state=rt))}postUpdate(t,e){this.state===rt&&(this.state=et)}get isSwiped(){return this.state===rt}get dragVelocity(){var t;switch(this.dirMode){case 0:t=this.getVelocityX();break;case 1:t=this.getVelocityY();break;default:t=this.getVelocity()}return t}setDragThreshold(t){return this.dragThreshold=t,this}setMinDragVelocity(t){return this.minDragVelocity=t,this}setDirectionMode(t){return"string"==typeof t&&(t=H[t]),this.dirMode=t,this}updateDirectionStates(){var t=Q(this.getVelocityAngle());return q(t,this.dirMode,this),this}clearDirectionStates(){return this.left=!1,this.right=!1,this.up=!1,this.down=!1,this}}Object.assign(tt.prototype,J);const et="IDLE",nt="BEGIN",rt="RECOGNIZED";var it=tt;s.register("swipe",(function(t,e){return C(t)||(e=t,t=this.scene),new it(t,e)})),R(window,"RexPlugins.Gestures.Swipe",it);var ot=function(t){if(Array.isArray(t))t.length=0;else for(var e in t)delete t[e]};const st=Phaser.Utils.Objects.GetValue,at=Phaser.Utils.Array.SpliceOne,ut=Phaser.Math.Distance.Between,ct=Phaser.Math.Angle.Between;class ht{constructor(t,e){var n=t.input.manager.pointersTotal-1;n<2&&t.input.addPointer(2-n),this.scene=t,this.setEventEmitter(st(e,"eventEmitter",void 0)),this.pointers=[],this.movedState={},this.resetFromJSON(e),this.boot()}resetFromJSON(t){return this.setEnable(st(t,"enable",!0)),this.bounds=st(t,"bounds",void 0),this.tracerState=lt,this.pointers.length=0,ot(this.movedState),this}boot(){this.scene.input.on("pointerdown",this.onPointerDown,this),this.scene.input.on("pointerup",this.onPointerUp,this),this.scene.input.on("pointermove",this.onPointerMove,this),this.scene.events.once("shutdown",this.destroy,this)}shutdown(){this.destroyEventEmitter(),this.pointers.length=0,ot(this.movedState),this.scene&&(this.scene.input.off("pointerdown",this.onPointerDown,this),this.scene.input.off("pointerup",this.onPointerUp,this),this.scene.input.off("pointermove",this.onPointerMove,this),this.scene.events.off("destroy",this.destroy,this),this.scene=void 0),this.scene=void 0}destroy(){this.shutdown()}setEnable(t){return void 0===t&&(t=!0),this.enable===t?this:(t||this.dragCancel(),this.enable=t,this)}onPointerDown(t){if(this.enable&&(2!==this.pointers.length&&(!this.bounds||this.bounds.contains(t.x,t.y))&&-1===this.pointers.indexOf(t)))switch(this.movedState[t.id]=!1,this.pointers.push(t),this.tracerState){case lt:this.tracerState=pt,this.onDrag1Start();break;case pt:this.tracerState=dt,this.onDrag2Start()}}onPointerUp(t){if(this.enable&&(!this.bounds||this.bounds.contains(t.x,t.y))){var e=this.pointers.indexOf(t);if(-1!==e)switch(delete this.movedState[t.id],at(this.pointers,e),this.tracerState){case pt:this.tracerState=lt,this.onDrag1End();break;case dt:this.tracerState=pt,this.onDrag2End(),this.onDrag1Start()}}}onPointerMove(t){if(this.enable&&t.isDown){var e=!this.bounds||this.bounds.contains(t.x,t.y),n=-1!==this.pointers.indexOf(t);if(!n&&e);else if(n&&!e)this.onPointerUp(t);else if(this.movedState[t.id]||(this.movedState[t.id]=t.x!==t.downX||t.y!==t.downY),this.movedState[t.id])switch(this.tracerState){case pt:this.onDrag1();break;case dt:this.onDrag2()}}}dragCancel(){return this.tracerState===dt&&this.onDrag2End(),this.pointers.length=0,ot(this.movedState),this.tracerState=lt,this}onDrag1Start(){this.emit("drag1start",this)}onDrag1End(){this.emit("drag1end",this)}onDrag1(){this.emit("drag1",this)}onDrag2Start(){this.emit("drag2start",this)}onDrag2End(){this.emit("drag2end",this)}onDrag2(){this.emit("drag2",this)}get distanceBetween(){if(this.tracerState!==dt)return 0;var t=this.pointers[0],e=this.pointers[1];return ut(t.x,t.y,e.x,e.y)}get angleBetween(){if(this.tracerState!==dt)return 0;var t=this.pointers[0],e=this.pointers[1];return ct(t.x,t.y,e.x,e.y)}get drag1Vector(){var t=this.pointers[0];if(t&&this.movedState[t.id]){var e=t.position,n=t.prevPosition;ft.x=e.x-n.x,ft.y=e.y-n.y}else ft.x=0,ft.y=0;return ft}get centerX(){if(this.tracerState!==dt)return 0;var t=this.pointers[0].position,e=this.pointers[1].position;return(t.x+e.x)/2}get centerY(){if(this.tracerState!==dt)return 0;var t=this.pointers[0].position,e=this.pointers[1].position;return(t.y+e.y)/2}get prevCenterX(){if(this.tracerState!==dt)return 0;var t=this.movedState[this.pointers[0].id]?this.pointers[0].prevPosition:this.pointers[0].position,e=this.movedState[this.pointers[1].id]?this.pointers[1].prevPosition:this.pointers[1].position;return(t.x+e.x)/2}get prevCenterY(){if(this.tracerState!==dt)return 0;var t=this.movedState[this.pointers[0].id]?this.pointers[0].prevPosition:this.pointers[0].position,e=this.movedState[this.pointers[1].id]?this.pointers[1].prevPosition:this.pointers[1].position;return(t.y+e.y)/2}get movementCenterX(){return this.centerX-this.prevCenterX}get movementCenterY(){return this.centerY-this.prevCenterY}setRecongizedStateObject(t){return this.recongizedState=t,this}get state(){return this.recongizedState.state}set state(t){this.recongizedState.state=t}cancel(){return this.state=gt,this}}Object.assign(ht.prototype,a);var ft={};const lt=0,pt=1,dt=2,gt="IDLE";var vt=ht;const yt=Phaser.Utils.Objects.GetValue;const mt="IDLE",_t="BEGIN",bt="RECOGNIZED";var wt=class extends vt{constructor(t,e){super(t,e);var n=this,r={states:{IDLE:{enter:function(){n.prevDistance=void 0,n.scaleFactor=1}},BEGIN:{},RECOGNIZED:{enter:function(){n.emit("pinchstart",n)},exit:function(){n.emit("pinchend",n)}}},init:function(){this.state=mt},eventEmitter:!1};this.setRecongizedStateObject(new E(r))}resetFromJSON(t){return super.resetFromJSON(t),this.setDragThreshold(yt(t,"threshold",0)),this}onDrag2Start(){this.scaleFactor=1,this.prevDistance=this.distanceBetween,this.state=0===this.dragThreshold?bt:_t}onDrag2End(){this.state=mt}onDrag2(){switch(this.state){case _t:if(this.pointers[0].getDistance()>=this.dragThreshold&&this.pointers[1].getDistance()>=this.dragThreshold){var t=this.distanceBetween;this.scaleFactor=t/this.prevDistance,this.prevDistance=t,this.state=bt}break;case bt:t=this.distanceBetween;this.scaleFactor=t/this.prevDistance,this.emit("pinch",this),this.prevDistance=t}}get isPinch(){return this.state===bt}setDragThreshold(t){return this.dragThreshold=t,this}};s.register("pinch",(function(t){return new wt(this.scene,t)})),R(window,"RexPlugins.Gestures.Pinch",wt);const xt=Phaser.Math.RotateAround;var jt=function(t,e,n,r){return xt(t,e,n,r),t.rotation+=r,t},St={},Et=function(t,e){if(!this.isRotation)return this;void 0===e&&(e=this.pointers[0].camera);var n=this.movementCenterX,r=this.movementCenterY;e.getWorldPoint(this.centerX,this.centerY,St);var i=St.x,o=St.y,s=this.rotation;if(Array.isArray(t))for(var a=t,u=0,c=a.length;u<c;u++)(t=a[u]).x+=n,t.y+=r,jt(t,i,o,s);else t.x+=n,t.y+=r,jt(t,x,y,s);return this};const Ot=Phaser.Utils.Objects.GetValue,kt=Phaser.Math.Angle.WrapDegrees,Pt=Phaser.Math.Angle.ShortestBetween,Dt=Phaser.Math.RadToDeg,Tt=Phaser.Math.DegToRad;class It extends vt{constructor(t,e){super(t,e);var n=this,r={states:{IDLE:{enter:function(){n.prevAngle=void 0,n.angle=0}},BEGIN:{},RECOGNIZED:{enter:function(){n.emit("rotatestart",n)},exit:function(){n.emit("rotateend",n)}}},init:function(){this.state=Rt},eventEmitter:!1};this.setRecongizedStateObject(new E(r))}resetFromJSON(t){return super.resetFromJSON(t),this.setDragThreshold(Ot(t,"threshold",0)),this}onDrag2Start(){this.prevAngle=kt(Dt(this.angleBetween)),this.state=0===this.rotationThreshold?Ct:Mt}onDrag2End(){this.state=Rt}onDrag2(){switch(this.state){case Mt:if(this.pointers[0].getDistance()>=this.dragThreshold&&this.pointers[1].getDistance()>=this.dragThreshold){var t=kt(Dt(this.angleBetween));this.angle=Pt(this.prevAngle,t),this.prevAngle=t,this.state=Ct}break;case Ct:t=kt(Dt(this.angleBetween));this.angle=Pt(this.prevAngle,t),this.prevAngle=t,this.emit("rotate",this)}}get isRotation(){return this.state===Ct}get rotation(){return Tt(this.angle)}setDragThreshold(t){return this.dragThreshold=t,this}}var At={spinObject:Et};Object.assign(It.prototype,At);const Rt="IDLE",Mt="BEGIN",Ct="RECOGNIZED";var zt=It;s.register("rotate",(function(t){return new zt(this.scene,t)})),R(window,"RexPlugins.Gestures.Rotate",zt);class Wt extends Phaser.Plugins.ScenePlugin{constructor(t,e){super(t,e),this.add=new s(t)}}var Bt=Wt;class Lt extends Phaser.Plugins.BasePlugin{constructor(t){super(t),this.x=64,this.y=64,this.facing="right",this.startScene="mazelevel"}start(){let t=localStorage.getItem("mazeexit");t&&(console.log("Starting in "+t),this.setExit(JSON.parse(t)))}setExit({x:t=64,y:e=64,facing:n="right",scene:r="mazelevel"}={}){this.x=t,this.y=e,this.facing=n,this.startScene=r,localStorage.setItem("mazeexit",JSON.stringify({x:t,y:e,facing:n,scene:r}))}}var Nt=Lt,Ft=n(2),Ut=n.n(Ft);class Gt extends Phaser.Plugins.BasePlugin{constructor(t){super(t),this.tileTypes=[{top:!0,right:!0,bottom:!0,left:!0},{top:!1,right:!1,bottom:!1,left:!1},{top:!0,right:!1,bottom:!0,left:!1},{top:!1,right:!0,bottom:!1,left:!0},{top:!1,right:!0,bottom:!1,left:!1},{top:!1,right:!1,bottom:!1,left:!0},{top:!0,right:!1,bottom:!1,left:!1},{top:!1,right:!1,bottom:!0,left:!1},{top:!1,right:!1,bottom:!0,left:!0},{top:!0,right:!1,bottom:!1,left:!0},{top:!0,right:!0,bottom:!1,left:!1},{top:!1,right:!0,bottom:!0,left:!1},{top:!1,right:!0,bottom:!0,left:!0},{top:!0,right:!1,bottom:!0,left:!0},{top:!0,right:!0,bottom:!1,left:!0},{top:!0,right:!0,bottom:!0,left:!1}],this.topLeftMapping=[0,1,2,4,4,1,6,7,7,6,10,11,11,2,10,15],this.bottomRightMapping=[0,1,2,5,1,5,6,7,8,9,6,7,8,13,14,2],this.maze=void 0,this.gridWidth=0,this.gridHeight=0}start(){}generate(t,e){this.gridWidth=t,this.gridHeight=e,this.maze=Ut()(this.gridWidth,this.gridHeight,!0);for(let t of this.maze)for(let e of t)for(let t=0;t<this.tileTypes.length;t++)e.top==this.tileTypes[t].top&&e.right==this.tileTypes[t].right&&e.bottom==this.tileTypes[t].bottom&&e.left==this.tileTypes[t].left&&(e.type=t);return this.maze}openTopLeft(){this.maze[0][0].type=this.topLeftMapping[this.maze[0][0].type]}openBottomRight(){this.maze[this.gridHeight-1][this.gridWidth-1].type=this.bottomRightMapping[this.maze[this.gridHeight-1][this.gridWidth-1].type]}createMapData({key:t="map",shardW:e=16,shardH:n=16,layer:r=0}={}){let i=[];for(let t=0;t<this.gridHeight*n;t++){let t=[];i.push(t);for(let n=0;n<this.gridWidth*e;n++)t.push(0)}for(let o of this.maze)for(let s of o)if(void 0!==s.type){let o=this.game.cache.tilemap.entries.entries[t+s.type].data.layers[r].data;for(let t=0;t<n;t++)for(let r=0;r<e;r++){let a=t*e+r,u=s.x*e+r;i[s.y*n+t][u]=o[a]-1}}return i}}var Vt=Gt;class Xt extends Phaser.Scene{constructor(){super({key:"preloader"})}preload(){let t=this.add.graphics();this.load.on("progress",e=>{t.clear(),t.fillStyle(i.a.config.settings.backgroundColor,1),t.fillRect(0,this.sys.game.config.height/2-30,this.sys.game.config.width*e,60)}),this.load.on("complete",()=>{t.destroy()}),this.load.image("tiles",i.a.config.assets.tileset);for(let t=0;t<16;t++)this.load.tilemapTiledJSON("map"+t,i.a.config.assets.mapArray[t]);this.load.image("player",i.a.config.settings.playerImg||"https://images.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/rhp2y-player.png"),this.load.image("playIcon",i.a.config.settings.menuIcon||"https://images.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/s51bz-playIcon.png"),this.load.image("retryIcon",i.a.config.settings.retryIcon||"https://images.koji-cdn.com/f852518e-69be-4b7d-9c6d-c224dfe35cd0/nvuhq-retryIcon.png")}create(){this.scene.start("menu")}}var Yt=Xt;class $t extends Phaser.Scene{constructor(){super({key:"booter"}),this.blurredScene=void 0}create(){this.sys.game.events.on("pause",()=>{for(let t of this.scene.manager.scenes)this.blurredScene=t.scene.key},this),this.sys.game.events.on("blur",()=>{for(let t of this.scene.manager.scenes)t.scene.settings.active&&(this.blurredScene=t.scene.key)},this),this.sys.game.events.on("focus",()=>{if(this.blurredScene){this.scene.resume(this.blurredScene);this.scene.manager.getScene(this.blurredScene)}this.blurredScene=void 0},this),this.sys.game.events.on("resume",()=>{if(this.blurredScene){this.scene.resume(this.blurredScene);this.scene.manager.getScene(this.blurredScene)}this.blurredScene=void 0},this),window.onresize=this.onWindowResize.bind(this),this.onWindowResize(),this.scene.start("preloader")}onWindowResize(){let t=Math.max(window.innerWidth,window.innerHeight),e=2*Math.max(1,Math.floor(t/window.maxSize));this.sys.game.config.zoom=e;let n=Math.ceil(window.innerWidth/e),r=Math.ceil(window.innerHeight/e);this.sys.game.renderer.resize(n,r,1),this.sys.game.config.width=n,this.sys.game.config.height=r,this.sys.canvas.style.width=n*e+"px",this.sys.canvas.style.height=r*e+"px";for(let t of this.scene.manager.scenes)t.cameras&&t.cameras.main&&t.cameras.main.setViewport(0,0,n,r),t.scene.settings.active&&t.resizeField&&t.resizeField(n,r);if(this.blurredScene){let t=this.scene.manager.getScene(this.blurredScene);t.cameras.main.setViewport(0,0,n,r),t.resizeField&&t.resizeField(n,r)}}}var Jt=$t;class Ht extends Phaser.Scene{constructor(t){super(t||{key:"level"}),this.player=void 0,this.exits=void 0,this.counter=0}create(){this.cameras.main.setRoundPixels(!0),this.cursors=this.input.keyboard.addKeys({up:"W",left:"A",right:"D"}),this.exits=[],this.cameras.main.setBackgroundColor(i.a.config.settings.backgroundColor||"#d76b6b"),this.swipe=this.rexGestures.add.swipe({direction:1,enable:!0})}postCreate(){this.resizeField(this.sys.game.config.width,this.sys.game.config.height)}addPlayer({x:t=64,y:e=64}={}){this.player=this.physics.add.image(t,e,"player"),this.player.setBounce(.2),this.player.setCollideWorldBounds(!0),this.player.body.setGravityY(300),this.player.alive=!0,this.player.disappear=()=>{this.player.alive=!1,this.player.visible=!1,this.player.body.enable=!1},this.player.flipX=i.a.config.settings.flip,this.cameras.main.startFollow(this.player,!0),this.timer=void 0}addExit({x:t=-480,y:e=0,w:n=512,h:r=2048,startX:i=64,startY:o=64,facing:s="right",scene:a=!1}={}){if(!a)return;let u={rect:new Phaser.Geom.Rectangle(t,e,n,r),startX:i,startY:o,facing:s,scene:a};this.exits.push(u)}checkExits(){if(this.exits&&this.exits.length&&this.player)for(let t of this.exits)if(Phaser.Geom.Rectangle.ContainsPoint(t.rect,this.player)){this.leaveThroughExit(t),this.player.disappear(),this.counter++,this.exits=[];break}}leaveThroughExit({startX:t=0,startY:e=0,facing:n="right",scene:r=!1}={}){r&&(this.startPosition.setExit({x:t,y:e,facing:n,scene:r}),this.cameras.main.once("camerafadeoutcomplete",t=>{this.scene.start(r)},this),fadeColor={r:5,g:4,b:4},this.cameras.main.fadeOut(3e3,fadeColor.r,fadeColor.g,fadeColor.b),this.timer.remove())}resizeField(t,e){this.centerMap&&this.cameras.main.setBounds((this.centerMap.widthInPixels-t)/2,(this.centerMap.heightInPixels-e)/2,t,e)}}var Zt=Ht;var qt=class extends Zt{constructor(t){super(t||{key:"mazelevel"}),this.prefabShardWidth=128,this.prefabShardHeight=128,this.prefabMapWidth=0,this.prefabMapHeight=0}create(){super.create(),this.addPlayer({x:this.startPosition.x,y:this.startPosition.y});this.maze.generate(32,8);this.maze.openBottomRight(),this.prefabMapWidth=this.prefabShardWidth*this.maze.gridWidth,this.prefabMapHeight=this.prefabShardHeight*this.maze.gridHeight,this.cameras.main.setBounds(16,0,this.prefabMapWidth-32,this.prefabMapHeight),this.physics.world.setBounds(0,0,this.prefabMapWidth,this.prefabMapHeight);let t=this.maze.createMapData({key:"map",shardW:16,shardH:16}),e=this.make.tilemap({data:t,tileWidth:8,tileHeight:8}),n=e.addTilesetImage("tiles","tiles",8,8,0,0),r=e.createStaticLayer(0,n,0,0);e.setCollisionBetween(192,255),this.physics.add.collider(this.player,r),this.addExit({scene:"mazelevel",x:4080,startX:64,startY:64,facing:"right"}),this.cameras.main.setBackgroundColor(i.a.config.settings.backgroundColor||"#d76b6b"),this.postCreate(),i.a.config.settings.countdown&&(this.timer=this.time.delayedCall(i.a.config.settings.time?1e3*i.a.config.settings.time:6e4,()=>{this.cameras.main.flash(1500,255,0,0),setTimeout(()=>{this.scene.start("gameover")},600)})),this.txt=this.add.text(5,10),this.txt.setScrollFactor(0,0)}update(t,e){if(i.a.config.settings.countdown){let t=Math.round((i.a.config.settings.time?i.a.config.settings.time:60)-this.timer.getElapsedSeconds());this.txt.setText("Time left:"+t+"\nMazes solved:"+this.counter),this.txt.setColor(i.a.config.settings.textColor||"#000")}else this.txt.setText("Mazes solved:"+this.counter),this.txt.setColor(i.a.config.settings.textColor||"#000");this.cursors.left.isDown?(this.player.setVelocityX(-200),this.player.flipX=!1):this.cursors.right.isDown?(this.player.setVelocityX(200),this.player.flipX=!0):this.player.setVelocityX(0),this.cursors.up.isDown&&this.player.body.onFloor()?this.player.setVelocityY(-350):this.cursors.up.isDown&&this.player.body.onWall()&&this.player.setVelocityY(-305),this.input.activePointer.wasTouch&&(this.input.activePointer.isDown&&(this.player.setVelocityX(this.player.flipX?250:-250),this.player.body.onFloor()?this.player.setVelocityY(-350):this.player.body.onWall()&&this.player.setVelocityY(-305)),this.swipe.on("swipe",()=>{!0===this.swipe.right?this.player.flipX=!0:this.player.flipX=!1},this)),this.checkExits()}};class Kt extends Phaser.Scene{constructor(){super({key:"menu"})}create(){let t=this.add.image(this.sys.game.config.width/2,this.sys.game.config.height/2,"playIcon");t.setInteractive(),t.on("pointerdown",t=>{this.scene.start(this.startPosition.startScene)})}}var Qt=Kt;class te extends Phaser.Scene{constructor(){super({key:"gameover"})}create(){let t=this.add.image(this.sys.game.config.width/2,this.sys.game.config.height/2,"retryIcon");t.setInteractive(),t.on("pointerdown",e=>{t.destroy(),this.scene.start(this.startPosition.startScene)})}}var ee=te;window.fadeColor={r:22,g:25,b:30},window.maxSize=920;let ne=Math.max(window.innerWidth,window.innerHeight),re=2*Math.max(1,Math.floor(ne/window.maxSize));var ie={type:Phaser.WEBGL,parent:"phaser-game",width:window.innerWidth/re,height:window.innerHeight/re,backgroundColor:i.a.config.settings.backgroundColor||"#d76b6b",pixelArt:!0,zoom:re,physics:{default:"arcade",arcade:{gravity:{y:500}}},plugins:{scene:[{key:"rexGestures",plugin:Bt,mapping:"rexGestures"}],global:[{key:"startPosition",plugin:Nt,mapping:"startPosition",start:!0},{key:"mazePlugin",plugin:Vt,mapping:"maze",start:!0}]},input:{queue:!0},scene:[Jt,Yt,Qt,qt,ee]};window.game=new Phaser.Game(ie)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,